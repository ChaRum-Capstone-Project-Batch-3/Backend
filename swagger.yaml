openapi: 3.0.0
info:
  title: Charum
  description: |-
    This is a Charum Back End
  version: 1.0.0
servers:
  - url: https://charum-api.nyakit.in/api/v1
tags:
  - name: User
    description: Operations about user
  - name: Admin
    description: Operations for admin
paths:
  /user/register:
    post:
      tags:
        - User
      summary: Registration for user
      description: This registration is used by user
      operationId: Register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@charum.com
                userName:
                  type: string
                  example: charum-user
                displayName:
                  type: string
                  example: charum user
                password:
                  type: string
                  example: secretpassword
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: success to register
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI2Mzc5ZmU4ZGFkMzNlYzQyNTE3MDBkZWQiLCJyb2xlIjoidXNlciIsImlzcyI6ImNoYXJ1bSIsImV4cCI6MTY2ODk0Nzg3NiwibmJmIjoxNjY4OTQ0Mjc2LCJpYXQiOjE2Njg5NDQyNzZ9._hk2Y2pt6tADTN0aHTukPNd2O_wRdHsgn3Vo4jIX_zc
                      user:
                        $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: validation failed
                  data:
                    type: object
                    properties:
                      field:
                        type: string
                        example: password
                      message:
                        type: string
                        example: This field must be at least 8 characters
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 409
                  message:
                    type: string
                    example: email is already registered
                  data:
                    type: string
                    example: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: failed to register user
                  data:
                    type: string
                    example: null
  /user/login:
    post:
      tags:
        - User
      summary: Logs user into the system
      description: Get token for user and user's data
      operationId: Login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@charum.com
                password:
                  type: string
                  example: secretpassword
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to login
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI2Mzc5ZmU4ZGFkMzNlYzQyNTE3MDBkZWQiLCJyb2xlIjoidXNlciIsImlzcyI6ImNoYXJ1bSIsImV4cCI6MTY2ODk0Nzg3NiwibmJmIjoxNjY4OTQ0Mjc2LCJpYXQiOjE2Njg5NDQyNzZ9._hk2Y2pt6tADTN0aHTukPNd2O_wRdHsgn3Vo4jIX_zc
                      user:
                        $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: validation failed
                  data:
                    type: object
                    properties:
                      field:
                        type: string
                        example: password
                      message:
                        type: string
                        example: This field must be at least 8 characters
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: email is not registered
                  data:
                    type: string
                    example: null
  /user/profile:
    get:
      tags:
        - User
      summary: Get user profile
      description: Get user's profile data
      operationId: GetProfile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to login
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI2Mzc5ZmU4ZGFkMzNlYzQyNTE3MDBkZWQiLCJyb2xlIjoidXNlciIsImlzcyI6ImNoYXJ1bSIsImV4cCI6MTY2ODk0Nzg3NiwibmJmIjoxNjY4OTQ0Mjc2LCJpYXQiOjE2Njg5NDQyNzZ9._hk2Y2pt6tADTN0aHTukPNd2O_wRdHsgn3Vo4jIX_zc
                      user:
                        $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: validation failed
                  data:
                    type: object
                    properties:
                      field:
                        type: string
                        example: password
                      message:
                        type: string
                        example: This field must be at least 8 characters
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: email is not registered
                  data:
                    type: string
                    example: null
  /admin/user/{page}:
    get:
      tags:
        - Admin
      summary: Get user list
      description: Get user list with pagination and sorting
      operationId: GetManyWithPagination
      parameters:
        - in: path
          name: page
          description: page displayed
          required: true
          schema:
            type: integer
            example: 1
        - in: query
          name: limit
          description: user limitation for per page
          required: false
          schema:
            type: integer
            example: 25
            default: 25
        - in: query
          name: sort
          description: define parameter for sorting. available options = id, email, userName, displayName, createdAt, or updatedAt
          required: false
          schema:
            type: string
            example: createdAt
            default: createdAt
        - in: query
          name: order
          description: define the order of the selected sort. available options = asc or desc
          required: false
          schema:
            type: string
            example: desc
            default: desc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to get user by id
                  data:
                    type: object
                    properties:
                      totalPage:
                        type: integer
                        example: 2
                      user:
                        type: array
                        items:
                          $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: page must be a number
                  data:
                    type: string
                    example: null

        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: failed to get users
                  data:
                    type: string
                    example: null
  /admin/user/id/{id}:
    get:
      tags:
        - Admin
      summary: Get user profile
      description: Get user's profile data
      operationId: GetByID
      parameters:
        - in: path
          name: id
          description: user ID
          required: true
          schema:
            type: string
            example: 637dfc9bb09d0bdd7a2fe3de
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to get user by id
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: invalid id
                  data:
                    type: string
                    example: null

        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: failed to get user
                  data:
                    type: string
                    example: null
    put:
      tags:
        - Admin
      summary: Update user profile
      description: Update user's profile data
      operationId: Update
      parameters:
        - in: path
          name: id
          description: user ID
          required: true
          schema:
            type: string
            example: 637dfc9bb09d0bdd7a2fe3de
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@charum.com
                userName:
                  type: string
                  example: charum-user
                displayName:
                  type: string
                  example: charum user
                isActive:
                  type: boolean
                  example: false
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to update
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: invalid id
                  data:
                    type: string
                    example: null
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: unauthorized
                  data:
                    type: string
                    example: null
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: failed to get user
                  data:
                    type: string
                    example: null
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 409
                  message:
                    type: string
                    example: email is already used
                  data:
                    type: string
                    example: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: failed to update user
                  data:
                    type: string
                    example: null
    delete:
      tags:
        - Admin
      summary: Delete user
      description: Delete user's data
      operationId: Delete
      parameters:
        - in: path
          name: id
          description: user ID
          required: true
          schema:
            type: string
            example: 637dfc9bb09d0bdd7a2fe3de
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to delete user
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: invalid id
                  data:
                    type: string
                    example: null
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: unauthorized
                  data:
                    type: string
                    example: null
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: failed to get user
                  data:
                    type: string
                    example: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: failed to delete user
                  data:
                    type: string
                    example: null
  /admin/user/suspend/{id}:
    put:
      tags:
        - Admin
      summary: Suspend user
      description: Suspend user
      operationId: Suspend
      parameters:
        - in: path
          name: id
          description: user ID
          required: true
          schema:
            type: string
            example: 637dfc9bb09d0bdd7a2fe3de
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to suspend user
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: invalid id
                  data:
                    type: string
                    example: null
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: failed to get user
                  data:
                    type: string
                    example: null
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 409
                  message:
                    type: string
                    example: user is already suspended
                  data:
                    type: string
                    example: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: failed to suspend user
                  data:
                    type: string
                    example: null
  /admin/user/unsuspend/{id}:
    put:
      tags:
        - Admin
      summary: Suspend user
      description: Suspend user
      operationId: Unsuspend
      parameters:
        - in: path
          name: id
          description: user ID
          required: true
          schema:
            type: string
            example: 637dfc9bb09d0bdd7a2fe3de
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to unsuspend user
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: invalid id
                  data:
                    type: string
                    example: null
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: failed to get user
                  data:
                    type: string
                    example: null
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 409
                  message:
                    type: string
                    example: user is not suspended
                  data:
                    type: string
                    example: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: failed to suspend user
                  data:
                    type: string
                    example: null

  /admin/topic/:
    post:
      tags:
        - Admin
      summary: Create Topic
      description: Create Topic
      operationId: Create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                topic:
                  type: string
                  example: topic name
                description:
                  type: string
                  example: topic description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to create topic
                  data:
                    type: object
                    properties:
                      topic:
                        $ref: '#/components/schemas/Topic'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: validation failed
                  data:
                    type: object
                    properties:
                      field:
                        type: string
                        example: topic
                      message:
                        type: string
                        example: This field is required
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 409
                  message:
                    type: string
                    example: topic already exist
                  data:
                    type: string
                    example: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: failed to create topic
                  data:
                    type: string
                    example: null

    get:
      tags:
        - Admin
      summary: Get All Topic
      description: Get all topics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to get user by id
                  data:
                    type: object
                    properties:
                      topic:
                        $ref: '#/components/schemas/Topic'

        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: failed to get topic
                  data:
                    type: string
                    example: null

  /admin/topic/{id}:
    get:
      tags:
        - Admin
      summary: Get topic data
      description: Get topic data by id
      operationId: GetByID
      parameters:
        - in: path
          name: id
          description: topic ID
          required: true
          schema:
            type: string
            example: 637dfc9bb09d0bdd7a2fe3de
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to get topic by id
                  data:
                    type: object
                    properties:
                      topic:
                        $ref: '#/components/schemas/Topic'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: invalid id
                  data:
                    type: string
                    example: null

        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: failed to get topic
                  data:
                    type: string
                    example: null

    put:
      tags:
        - Admin
      summary: Update topic data
      description: Update topic data
      operationId: UpdateTopic
      parameters:
        - in: path
          name: id
          description: topic ID
          required: true
          schema:
            type: string
            example: 637dfc9bb09d0bdd7a2fe3de
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                topic:
                  type: string
                  example: new Topic
                description:
                  type: string
                  example: new Description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success update topic
                  data:
                    type: object
                    properties:
                      topic:
                        $ref: '#/components/schemas/Topic'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: invalid id
                  data:
                    type: string
                    example: null
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 409
                  message:
                    type: string
                    example: topic already exist
                  data:
                    type: string
                    example: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: failed to update topic
                  data:
                    type: string
                    example: null
    delete:
      tags:
        - Admin
      summary: Delete topic
      description: Delete topic
      operationId: DeleteTopic
      parameters:
        - in: path
          name: id
          description: topic ID
          required: true
          schema:
            type: string
            example: 637dfc9bb09d0bdd7a2fe3de
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to delete topic
                  data:
                    type: object
                    properties:
                      topic:
                        $ref: '#/components/schemas/Topic'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: invalid id
                  data:
                    type: string
                    example: null
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: unauthorized
                  data:
                    type: string
                    example: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: failed to delete topic
                  data:
                    type: string
                    example: null

  /admin/topic/name/{topic}:
    get:
      tags:
        - Admin
      summary: Get topic data
      description: Get topic data by topic name
      operationId: GetByTopic
      parameters:
        - in: path
          name: topic
          description: topic name
          required: true
          schema:
            type: string
            example: topicname
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to get topic by name
                  data:
                    type: object
                    properties:
                      topic:
                        $ref: '#/components/schemas/Topic'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: invalid id
                  data:
                    type: string
                    example: null

        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: failed to get topic
                  data:
                    type: string
                    example: null

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          example: 6379fe8dad33ec4251700ded
        email:
          type: string
          example: user@charum.com
        userName:
          type: string
          example: charum-user
        displayName:
          type: string
          example: charum user
        password:
          type: string
          example: secretpassword
        isActive:
          type: boolean
          example: true
        role:
          type: string
          example: user

    Topic:
      type: object
      properties:
        id:
          example: 6379fe8dad33ec4251700ded
        topic:
          type: string
          example: topic name
        description:
          type: string
          example: topic description
        createdAt:
          type: string
          example: 2022-11-26T23:05:11.806+07:00
        updatedAt:
          type: string
          example: 2022-11-26T23:05:11.806+07:00

security:
  - bearerAuth: []