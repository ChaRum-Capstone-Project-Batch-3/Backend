openapi: 3.0.0
info:
  title: Charum
  description: |-
    This is a Charum Back End
  version: 1.0.0
servers:
  - url: https://charum-api.nyakit.in/api/v1
tags:
  - name: User
    description: Operations about user
  - name: Forgot Password
    description: Operations about forgot password
  - name: Report
    description: Operation about report
  - name: Topic
    description: Operations about topic
  - name: Thread
    description: Operation about
  - name: Follow Thread
    description: Operation about follow thread
  - name: Comment
    description: Operation about comment
  - name: Like
    description: Operation about like
  - name: Bookmark
    description: Operation about bookmark
  - name: Admin
    description: Operations for admin

paths:
  /user/profile:
    get:
      tags:
        - User
      summary: Get user profile
      description: Get user's profile data
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to login
                data:
                  token: >-
                    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI2Mzc5ZmU4ZGFkMzNlYzQyNTE3MDBkZWQiLCJyb2xlIjoidXNlciIsImlzcyI6ImNoYXJ1bSIsImV4cCI6MTY2ODk0Nzg3NiwibmJmIjoxNjY4OTQ0Mjc2LCJpYXQiOjE2Njg5NDQyNzZ9._hk2Y2pt6tADTN0aHTukPNd2O_wRdHsgn3Vo4jIX_zc
                  user:
                    _id: 6379fe8dad33ec4251700ded
                    email: user@charum.com
                    userName: charumuser
                    displayName: charum user
                    biodata: halo aku user
                    socialMedia: instagram @anon
                    profilePictureURL: >-
                      https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                    isActive: true
                    role: user
                    createdAt: '2022-11-26T16:05:11.806Z'
                    updatedAt: '2022-11-26T16:05:11.806Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: validation failed
                data:
                  field: password
                  message: This field must be at least 8 characters
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: email is not registered
                data: irure sunt
    put:
      tags:
        - User
      summary: Update user profile
      description: Update user's profile data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@charum.com
                userName:
                  type: string
                  example: charum-user
                displayName:
                  type: string
                  example: charum user
                biodata:
                  type: string
                  example: halo aku user
                socialMedia:
                  type: string
                  example: instagram @anon
                profilePicture:
                  type: string
                  format: binary
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to update
                data:
                  user:
                    _id: 6379fe8dad33ec4251700ded
                    email: user@charum.com
                    userName: charumuser
                    displayName: charum user
                    biodata: halo aku user
                    socialMedia: instagram @anon
                    profilePictureURL: >-
                      https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                    isActive: true
                    role: user
                    createdAt: '2022-11-26T16:05:11.806Z'
                    updatedAt: '2022-11-26T16:05:11.806Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: invalid id
                data: sit minim
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 401
                message: unauthorized
                data: minim cillum laborum
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 404
                message: failed to get user
                data: elit Ut
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 409
                message: email is already used
                data: eu proident cupidatat ea
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 500
                message: failed to update user
                data: ullamco Lorem consequat esse
  /user/register:
    post:
      tags:
        - User
      summary: Registration for user
      description: This registration is used by user
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@charum.com
                userName:
                  type: string
                  example: charum-user
                displayName:
                  type: string
                  example: charum user
                biodata:
                  type: string
                  example: halo aku user
                socialMedia:
                  type: string
                  example: instagram @anon
                password:
                  type: string
                  example: secretpassword
                profilePicture:
                  type: string
                  format: binary
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 201
                message: success to register
                data:
                  token: >-
                    Bearer
                    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI2Mzc5ZmU4ZGFkMzNlYzQyNTE3MDBkZWQiLCJyb2xlIjoidXNlciIsImlzcyI6ImNoYXJ1bSIsImV4cCI6MTY2ODk0Nzg3NiwibmJmIjoxNjY4OTQ0Mjc2LCJpYXQiOjE2Njg5NDQyNzZ9._hk2Y2pt6tADTN0aHTukPNd2O_wRdHsgn3Vo4jIX_zc
                  user:
                    _id: 6379fe8dad33ec4251700ded
                    email: user@charum.com
                    userName: charumuser
                    displayName: charum user
                    biodata: halo aku user
                    socialMedia: instagram @anon
                    profilePictureURL: >-
                      https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                    isActive: true
                    role: user
                    createdAt: '2022-11-26T16:05:11.806Z'
                    updatedAt: '2022-11-26T16:05:11.806Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: validation failed
                data:
                  field: password
                  message: This field must be at least 8 characters
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 409
                message: email is already registered
                data: incididunt commodo adipisicing minim
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 500
                message: failed to register user
                data: ea
  /user/login:
    post:
      tags:
        - User
      summary: Logs user into the system
      description: Get token for user and user's data with email or username on key
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                key: user@charum.com
                password: secretpassword
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to login
                data:
                  token: >-
                    Bearer
                    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI2Mzc5ZmU4ZGFkMzNlYzQyNTE3MDBkZWQiLCJyb2xlIjoidXNlciIsImlzcyI6ImNoYXJ1bSIsImV4cCI6MTY2ODk0Nzg3NiwibmJmIjoxNjY4OTQ0Mjc2LCJpYXQiOjE2Njg5NDQyNzZ9._hk2Y2pt6tADTN0aHTukPNd2O_wRdHsgn3Vo4jIX_zc
                  user:
                    _id: 6379fe8dad33ec4251700ded
                    email: user@charum.com
                    userName: charumuser
                    displayName: charum user
                    biodata: halo aku user
                    socialMedia: instagram @anon
                    profilePictureURL: >-
                      https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                    isActive: true
                    role: user
                    createdAt: '2022-11-26T16:05:11.806Z'
                    updatedAt: '2022-11-26T16:05:11.806Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: validation failed
                data:
                  field: password
                  message: This field must be at least 8 characters
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: email is not registered
                data: irure sunt
  /user/change-password:
    put:
      tags:
        - User
      summary: Change password for authenticated user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                oldPassword: NewPassword!
                newPassword: OldPassword!
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=UTF-8
            Vary:
              schema:
                type: string
                example: Origin
            Date:
              schema:
                type: string
                example: Tue, 13 Dec 2022 06:19:16 GMT
            Content-Length:
              schema:
                type: integer
                example: '347'
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to change password
                data:
                  user:
                    _id: 63936adb18ffb83065c34453
                    email: user@charum.com
                    userName: user
                    displayName: user
                    biodata: ''
                    socialMedia: ''
                    profilePictureURL: ''
                    isActive: true
                    role: user
                    createdAt: '2022-12-10T00:05:31.614+07:00'
                    updatedAt: '2022-12-13T13:19:16.399+07:00'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=UTF-8
            Vary:
              schema:
                type: string
                example: Origin
            Date:
              schema:
                type: string
                example: Tue, 13 Dec 2022 06:10:58 GMT
            Content-Length:
              schema:
                type: integer
                example: '172'
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: validation failed
                data:
                  - field: oldPassword
                    message: This field is required
                  - field: newPassword
                    message: This field is required
  /user/forgot-password:
    post:
      tags:
        - Forgot Password

      summary: Request Reset Password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: user20@charum.com
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=UTF-8
            Vary:
              schema:
                type: string
                example: Origin
            Date:
              schema:
                type: string
                example: Tue, 13 Dec 2022 06:14:19 GMT
            Content-Length:
              schema:
                type: integer
                example: '340'
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success
                data:
                  id: 6398183676a0c9af33cd522c
                  email: user@charum.com
                  token: >-
                    NvBsQx6ENP2w41Lvnhbt5PIrgMh9Hqjmf5RUQ2kcHICIUBZakcf3EUmqEJvIfJ7lNU6M0SDNPApVGfGe
                  createdAt: '2022-12-13T13:14:14.785+07:00'
                  updatedAt: '2022-12-13T13:14:14.785+07:00'
                  expiredAt: '2022-12-13T13:44:14.785+07:00'
                  isUsed: false
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=UTF-8
            Vary:
              schema:
                type: string
                example: Origin
            Date:
              schema:
                type: string
                example: Tue, 13 Dec 2022 06:14:54 GMT
            Content-Length:
              schema:
                type: integer
                example: '63'
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: email is not registered
                data: null
  /user/forgot-password/{token}:
    get:
      tags:
        - Forgot Password
      summary: Get Forgot Password
      parameters:
        - name: token
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=UTF-8
            Vary:
              schema:
                type: string
                example: Origin
            Date:
              schema:
                type: string
                example: Tue, 13 Dec 2022 06:15:50 GMT
            Content-Length:
              schema:
                type: integer
                example: '344'
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: token valid
                data:
                  id: 6398183676a0c9af33cd522c
                  email: user@charum.com
                  token: >-
                    NvBsQx6ENP2w41Lvnhbt5PIrgMh9Hqjmf5RUQ2kcHICIUBZakcf3EUmqEJvIfJ7lNU6M0SDNPApVGfGe
                  createdAt: '2022-12-13T13:14:14.785+07:00'
                  updatedAt: '2022-12-13T13:14:14.785+07:00'
                  expiredAt: '2022-12-13T13:44:14.785+07:00'
                  isUsed: false
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=UTF-8
            Vary:
              schema:
                type: string
                example: Origin
            Date:
              schema:
                type: string
                example: Tue, 13 Dec 2022 06:15:15 GMT
            Content-Length:
              schema:
                type: integer
                example: '63'
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: token invalid/not found
                data: null
    post:
      tags:
        - Forgot Password
      summary: Reset Password by Token/Link
      requestBody:
        content: {}
      parameters:
        - name: token
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=UTF-8
            Vary:
              schema:
                type: string
                example: Origin
            Date:
              schema:
                type: string
                example: Tue, 13 Dec 2022 06:17:51 GMT
            Content-Length:
              schema:
                type: integer
                example: '339'
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success
                data:
                  id: 6398183676a0c9af33cd522c
                  email: user@charum.com
                  token: >-
                    NvBsQx6ENP2w41Lvnhbt5PIrgMh9Hqjmf5RUQ2kcHICIUBZakcf3EUmqEJvIfJ7lNU6M0SDNPApVGfGe
                  createdAt: '2022-12-13T13:14:14.785+07:00'
                  updatedAt: '2022-12-13T13:17:51.369+07:00'
                  expiredAt: '2022-12-13T13:44:14.785+07:00'
                  isUsed: true
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=UTF-8
            Vary:
              schema:
                type: string
                example: Origin
            Date:
              schema:
                type: string
                example: Tue, 13 Dec 2022 06:15:15 GMT
            Content-Length:
              schema:
                type: integer
                example: '63'
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: token invalid/not found
                data: null
  /thread/report/{thread-id}:
    post:
      tags:
        - Report
      summary: Report Thread
      requestBody:
        content: { }
      security:
        - bearerAuth: [ ]
      parameters:
        - name: thread-id
          in: path
          schema:
            type: string
          required: true
          example: 639df35efd1cd9847a8fc4df
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=UTF-8
            Vary:
              schema:
                type: string
                example: Origin
            Date:
              schema:
                type: string
                example: Wed, 21 Dec 2022 07:51:01 GMT
            Content-Length:
              schema:
                type: integer
                example: '329'
          content:
            application/json:
              schema:
                type: object
              example:
                status: 201
                message: success create report
                data:
                  id: 63a2bae54ee02b6b1caa9f89
                  userId: 63936adb18ffb83065c34453
                  reportedID: 639df35efd1cd9847a8fc4df
                  reportedType: thread
                  reportDetail: Inappropriate content or behavior
                  createdAt: '2022-12-21T14:51:01.267+07:00'
                  updatedAt: '2022-12-21T14:51:01.267+07:00'
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=UTF-8
            Vary:
              schema:
                type: string
                example: Origin
            Date:
              schema:
                type: string
                example: Wed, 21 Dec 2022 07:24:25 GMT
            Content-Length:
              schema:
                type: integer
                example: '56'
          content:
            application/json:
              schema:
                type: object
              example:
                status: 409
                message: already reported
                data: null
  /user/report/{user-id}:
    post:
      tags:
        - Report
      summary: Report User
      requestBody:
        content: { }
      parameters:
        - name: user-id
          in: path
          schema:
            type: string
          required: true
          example: 63934f785b1979ce0e7a15a0
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=UTF-8
            Vary:
              schema:
                type: string
                example: Origin
            Date:
              schema:
                type: string
                example: Wed, 21 Dec 2022 07:51:01 GMT
            Content-Length:
              schema:
                type: integer
                example: '329'
          content:
            application/json:
              schema:
                type: object
              example:
                status: 201
                message: success create report
                data:
                  id: 63a2bc6d4ee02b6b1caa9f8a
                  userId: 63936adb18ffb83065c34453
                  reportedID: 63934f785b1979ce0e7a15a0
                  reportedType: user
                  reportDetail: Inappropriate content or behavior
                  createdAt: '2022-12-21T14:57:33.887+07:00'
                  updatedAt: '2022-12-21T14:57:33.887+07:00'
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=UTF-8
            Vary:
              schema:
                type: string
                example: Origin
            Date:
              schema:
                type: string
                example: Wed, 21 Dec 2022 07:24:25 GMT
            Content-Length:
              schema:
                type: integer
                example: '56'
          content:
            application/json:
              schema:
                type: object
              example:
                status: 409
                message: already reported
                data: null
  /topic/{page}:
    get:
      tags:
        - Topic
      summary: Get all topic
      description: Get topic list with filter, pagination, and sorting
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: limit
          in: query
          schema:
            type: integer
          description: topic limitation for per page
          example: '25'
        - name: sort
          in: query
          schema:
            type: string
          description: >-
            define parameter for sorting. available options = id, topic,
            createdAt, or updatedAt
          example: createdAt
        - name: order
          in: query
          schema:
            type: string
          description: >-
            define the order of the selected sort. available options = asc or
            desc
          example: desc
        - name: topic
          in: query
          schema:
            type: string
          description: topic for filtering topic's data
          example: topic name
        - name: page
          in: path
          schema:
            type: integer
          required: true
          description: (Required) page displayed
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to get topics
                data:
                  topics:
                    - _id: 6379fe8dad33ec4251700ded
                      topic: topic name
                      description: topic description
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    - _id: 6379fe8dad33ec4251700ded
                      topic: topic name
                      description: topic description
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                pagination:
                  size: 1
                  totalData: 1
                  totalPage: 1
                  currentPage: 1
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: page must be a number
                data: elit incididunt in
                pagination:
                  size: 0
                  totalData: 0
                  totalPage: 0
                  currentPage: 0
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 500
                message: failed to get topics
                data: pariatur
                pagination:
                  size: 0
                  totalData: 0
                  totalPage: 0
                  currentPage: 0
  /topic/{topic-id}:
    get:
      tags:
        - Topic
      summary: Get topic data
      description: Get topic data by id
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: topic-id
          in: path
          schema:
            type: string
          required: true
          description: (Required) topic ID
          example: 637dfc9bb09d0bdd7a2fe3de
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to get topic by id
                data:
                  topic:
                    _id: 6379fe8dad33ec4251700ded
                    topic: topic name
                    description: topic description
                    createdAt: '2022-11-26T16:05:11.806Z'
                    updatedAt: '2022-11-26T16:05:11.806Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: invalid id
                data: sit minim
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 404
                message: failed to get topic
                data: elit ex proident
  /thread/id/{thread-id}:
    get:
      tags:
        - Thread
      summary: Get thread by id
      description: get thread's data by id
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: thread-id
          in: path
          schema:
            type: string
          required: true
          description: (Required) thread id
          example: 6379fe8dad33ec4251700ded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to get thread
                data:
                  thread:
                    _id: 6379fe8dad33ec4251700ded
                    topic:
                      _id: 6379fe8dad33ec4251700ded
                      topic: topic name
                      description: topic description
                      imageURL: >-
                        https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    creator:
                      _id: 6379fe8dad33ec4251700ded
                      email: user@charum.com
                      userName: charumuser
                      displayName: charum user
                      isActive: true
                      role: user
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    title: NextJS 13
                    description: Best NextJS update ever
                    imageURL: >-
                      https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                    likes:
                      - User:
                          _id: 6379fe8dad33ec4251700ded
                          email: user@charum.com
                          userName: charumuser
                          displayName: charum user
                          isActive: true
                          role: user
                          createdAt: '2022-11-26T16:05:11.806Z'
                          updatedAt: '2022-11-26T16:05:11.806Z'
                        createdAt: '2022-11-26T16:05:11.806Z'
                      - User:
                          _id: 6379fe8dad33ec4251700ded
                          email: user@charum.com
                          userName: charumuser
                          displayName: charum user
                          isActive: true
                          role: user
                          createdAt: '2022-11-26T16:05:11.806Z'
                          updatedAt: '2022-11-26T16:05:11.806Z'
                        createdAt: '2022-11-26T16:05:11.806Z'
                    createdAt: '2022-11-26T16:05:11.806Z'
                    updatedAt: '2022-11-26T16:05:11.806Z'
                  comments:
                    - _id: 6379fe8dad33ec4251700ded
                      thread:
                        _id: 6379fe8dad33ec4251700ded
                        topicId: 6379fe8dad33ec4251700ded
                        creatorId: 6379fe8dad33ec4251700ded
                        title: NextJS 13
                        description: Best NextJS update ever
                        imageURL: >-
                          https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                        likes:
                          - UserID:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            createdAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          - UserID:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            createdAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                        createdAt: '2022-11-26T16:05:11.806Z'
                        updatedAt: '2022-11-26T16:05:11.806Z'
                      user:
                        _id: 6379fe8dad33ec4251700ded
                        email: user@charum.com
                        userName: charumuser
                        displayName: charum user
                        isActive: true
                        role: user
                        createdAt: '2022-11-26T16:05:11.806Z'
                        updatedAt: '2022-11-26T16:05:11.806Z'
                      comment: Very Excited to user NextJS 13
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    - _id: 6379fe8dad33ec4251700ded
                      thread:
                        _id: 6379fe8dad33ec4251700ded
                        topicId: 6379fe8dad33ec4251700ded
                        creatorId: 6379fe8dad33ec4251700ded
                        title: NextJS 13
                        description: Best NextJS update ever
                        imageURL: >-
                          https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                        likes:
                          - UserID:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            createdAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          - UserID:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            createdAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                        createdAt: '2022-11-26T16:05:11.806Z'
                        updatedAt: '2022-11-26T16:05:11.806Z'
                      user:
                        _id: 6379fe8dad33ec4251700ded
                        email: user@charum.com
                        userName: charumuser
                        displayName: charum user
                        isActive: true
                        role: user
                        createdAt: '2022-11-26T16:05:11.806Z'
                        updatedAt: '2022-11-26T16:05:11.806Z'
                      comment: Very Excited to user NextJS 13
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: invalid thread id
                data: do nostru
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 404
                message: failed to get thread
                data: officia incididunt
    put:
      tags:
        - Thread
      summary: Update thread by id
      description: update user own thread or update thread by admin
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                topic:
                  type: string
                  example: 6379fe8dad33ec4251700ded
                title:
                  type: string
                  example: NextJS 13
                description:
                  type: string
                  example: Best NextJS update ever
                image:
                  type: string
                  format: binary
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: thread-id
          in: path
          schema:
            type: string
          required: true
          description: (Required) thread id
          example: 6379fe8dad33ec4251700ded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to update thread
                data:
                  thread:
                    _id: 6379fe8dad33ec4251700ded
                    topic:
                      _id: 6379fe8dad33ec4251700ded
                      topic: topic name
                      description: topic description
                      imageURL: >-
                        https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    creator:
                      _id: 6379fe8dad33ec4251700ded
                      email: user@charum.com
                      userName: charumuser
                      displayName: charum user
                      isActive: true
                      role: user
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    title: NextJS 13
                    description: Best NextJS update ever
                    imageURL: >-
                      https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                    likes:
                      - User:
                          _id: 6379fe8dad33ec4251700ded
                          email: user@charum.com
                          userName: charumuser
                          displayName: charum user
                          isActive: true
                          role: user
                          createdAt: '2022-11-26T16:05:11.806Z'
                          updatedAt: '2022-11-26T16:05:11.806Z'
                        createdAt: '2022-11-26T16:05:11.806Z'
                      - User:
                          _id: 6379fe8dad33ec4251700ded
                          email: user@charum.com
                          userName: charumuser
                          displayName: charum user
                          isActive: true
                          role: user
                          createdAt: '2022-11-26T16:05:11.806Z'
                          updatedAt: '2022-11-26T16:05:11.806Z'
                        createdAt: '2022-11-26T16:05:11.806Z'
                    createdAt: '2022-11-26T16:05:11.806Z'
                    updatedAt: '2022-11-26T16:05:11.806Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: invalid thread id
                data: do nostru
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 401
                message: invalid token
                data: Lorem incididunt quis Ut irure
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 403
                message: user are not the thread creator
                data: 'n'
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 404
                message: failed to get topic
                data: elit ex proident
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 500
                message: failed to update thread
                data: ullamco in mo
    delete:
      tags:
        - Thread
      summary: Delete thread
      description: creator and admin can delete thread
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: thread-id
          in: path
          schema:
            type: string
          required: true
          description: (Required) thread id
          example: 6379fe8dad33ec4251700ded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to delete thread
                data:
                  thread:
                    _id: 6379fe8dad33ec4251700ded
                    topic:
                      _id: 6379fe8dad33ec4251700ded
                      topic: topic name
                      description: topic description
                      imageURL: >-
                        https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    creator:
                      _id: 6379fe8dad33ec4251700ded
                      email: user@charum.com
                      userName: charumuser
                      displayName: charum user
                      isActive: true
                      role: user
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    title: NextJS 13
                    description: Best NextJS update ever
                    imageURL: >-
                      https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                    likes:
                      - User:
                          _id: 6379fe8dad33ec4251700ded
                          email: user@charum.com
                          userName: charumuser
                          displayName: charum user
                          isActive: true
                          role: user
                          createdAt: '2022-11-26T16:05:11.806Z'
                          updatedAt: '2022-11-26T16:05:11.806Z'
                        createdAt: '2022-11-26T16:05:11.806Z'
                      - User:
                          _id: 6379fe8dad33ec4251700ded
                          email: user@charum.com
                          userName: charumuser
                          displayName: charum user
                          isActive: true
                          role: user
                          createdAt: '2022-11-26T16:05:11.806Z'
                          updatedAt: '2022-11-26T16:05:11.806Z'
                        createdAt: '2022-11-26T16:05:11.806Z'
                    createdAt: '2022-11-26T16:05:11.806Z'
                    updatedAt: '2022-11-26T16:05:11.806Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: invalid thread id
                data: do nostru
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 401
                message: invalid token
                data: Lorem incididunt quis Ut irure
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 403
                message: user are not the thread creator
                data: 'n'
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 404
                message: failed to get thread
                data: officia incididunt
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 500
                message: failed to delete thread
                data: dolore nisi
  /thread/comment/{comment-id}:
    put:
      tags:
        - Comment
      summary: Update commment
      description: Update commment by comment id
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                parentID:
                  type: string
                  example: 6379fe8dad33ec4251700ded
                comment:
                  type: string
                  example: very excited
                image:
                  type: string
                  format: binary
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: comment-id
          in: path
          schema:
            type: string
          required: true
          description: (Required) comment's ID
          example: 6379fe8dad33ec4251700ded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to delete comment
                data:
                  comment:
                    _id: 6379fe8dad33ec4251700ded
                    threadID: 6379fe8dad33ec4251700ded
                    user:
                      _id: 6379fe8dad33ec4251700ded
                      email: user@charum.com
                      userName: charumuser
                      displayName: charum user
                      biodata: halo aku user
                      socialMedia: instagram @anon
                      profilePictureURL: >-
                        https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                      isActive: true
                      role: user
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    comment: Best NextJS update ever
                    createdAt: '2022-11-26T16:05:11.806Z'
                    updatedAt: '2022-11-26T16:05:11.806Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: invalid comment id
                data: sit nulla
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 401
                message: invalid token
                data: Lorem incididunt quis Ut irure
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 404
                message: failed to get comment
                data: ea mollit
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 500
                message: failed to delete comment
                data: cillum sit
    delete:
      tags:
        - Comment
      summary: Delete commment from thread
      description: Delete commment by comment id
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: comment-id
          in: path
          schema:
            type: string
          required: true
          description: (Required) comment's ID
          example: 6379fe8dad33ec4251700ded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to create comment
                data:
                  comment:
                    _id: 6379fe8dad33ec4251700ded
                    threadID: 6379fe8dad33ec4251700ded
                    user:
                      _id: 6379fe8dad33ec4251700ded
                      email: user@charum.com
                      userName: charumuser
                      displayName: charum user
                      biodata: halo aku user
                      socialMedia: instagram @anon
                      profilePictureURL: >-
                        https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                      isActive: true
                      role: user
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    comment: Best NextJS update ever
                    createdAt: '2022-11-26T16:05:11.806Z'
                    updatedAt: '2022-11-26T16:05:11.806Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: invalid comment id
                data: sit nulla
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 401
                message: invalid token
                data: Lorem incididunt quis Ut irure
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 404
                message: failed to get comment
                data: ea mollit
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 500
                message: failed to delete comment
                data: cillum sit
  /thread/comment/{thread-id}:
    post:
      tags:
        - Comment
      summary: Send commment to thread
      description: Send commment by thread id
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                parentID:
                  type: string
                  example: 6379fe8dad33ec4251700ded
                comment:
                  type: string
                  example: very excited
                image:
                  type: string
                  format: binary
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: thread-id
          in: path
          schema:
            type: string
          required: true
          description: (Required) thread's ID
          example: 6379fe8dad33ec4251700ded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to create comment
                data:
                  comment:
                    _id: 6379fe8dad33ec4251700ded
                    threadID: 6379fe8dad33ec4251700ded
                    user:
                      _id: 6379fe8dad33ec4251700ded
                      email: user@charum.com
                      userName: charumuser
                      displayName: charum user
                      biodata: halo aku user
                      socialMedia: instagram @anon
                      profilePictureURL: >-
                        https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                      isActive: true
                      role: user
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    comment: Best NextJS update ever
                    createdAt: '2022-11-26T16:05:11.806Z'
                    updatedAt: '2022-11-26T16:05:11.806Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: invalid thread id
                data: do nostru
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 401
                message: invalid token
                data: Lorem incididunt quis Ut irure
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 404
                message: failed to get thread
                data: officia incididunt
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 500
                message: failed to create comment
                data: pariatur anim eu dolore ullamco
  /thread/follow/{thread-id}:
    post:
      tags:
        - Follow Thread
      summary: Follow thread
      description: Create follow thread by thread id
      requestBody:
        content: {}
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: thread-id
          in: path
          schema:
            type: string
          required: true
          description: (Required) thread's ID
          example: 6379fe8dad33ec4251700ded
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 201
                message: success to follow thread
                data:
                  comment:
                    _id: 6379fe8dad33ec4251700ded
                    thread:
                      _id: 6379fe8dad33ec4251700ded
                      topic:
                        _id: 6379fe8dad33ec4251700ded
                        topic: topic name
                        description: topic description
                        imageURL: >-
                          https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                        createdAt: '2022-11-26T16:05:11.806Z'
                        updatedAt: '2022-11-26T16:05:11.806Z'
                      creator:
                        _id: 6379fe8dad33ec4251700ded
                        email: user@charum.com
                        userName: charumuser
                        displayName: charum user
                        isActive: true
                        role: user
                        createdAt: '2022-11-26T16:05:11.806Z'
                        updatedAt: '2022-11-26T16:05:11.806Z'
                      title: NextJS 13
                      description: Best NextJS update ever
                      imageURL: >-
                        https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                      likes:
                        - User:
                            _id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            email:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            userName:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            displayName:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            isActive:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            role:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            createdAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            updatedAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          createdAt: '2022-11-26T16:05:11.806Z'
                        - User:
                            _id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            email:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            userName:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            displayName:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            isActive:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            role:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            createdAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            updatedAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          createdAt: '2022-11-26T16:05:11.806Z'
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    user:
                      _id: 6379fe8dad33ec4251700ded
                      email: user@charum.com
                      userName: charumuser
                      displayName: charum user
                      biodata: halo aku user
                      socialMedia: instagram @anon
                      profilePictureURL: >-
                        https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                      isActive: true
                      role: user
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    createdAt: '2022-11-26T16:05:11.806Z'
                    updatedAt: '2022-11-26T16:05:11.806Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: invalid thread id
                data: do nostru
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 401
                message: invalid token
                data: Lorem incididunt quis Ut irure
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 404
                message: failed to get thread
                data: officia incididunt
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 409
                message: user already follow this thread
                data: veniam
    delete:
      tags:
        - Follow Thread
      summary: Unfollow thread
      description: Delete follow thread by thread id
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: thread-id
          in: path
          schema:
            type: string
          required: true
          description: (Required) thread's ID
          example: 6379fe8dad33ec4251700ded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to unfollow thread
                data:
                  comment:
                    _id: 6379fe8dad33ec4251700ded
                    thread:
                      _id: 6379fe8dad33ec4251700ded
                      topic:
                        _id: 6379fe8dad33ec4251700ded
                        topic: topic name
                        description: topic description
                        imageURL: >-
                          https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                        createdAt: '2022-11-26T16:05:11.806Z'
                        updatedAt: '2022-11-26T16:05:11.806Z'
                      creator:
                        _id: 6379fe8dad33ec4251700ded
                        email: user@charum.com
                        userName: charumuser
                        displayName: charum user
                        isActive: true
                        role: user
                        createdAt: '2022-11-26T16:05:11.806Z'
                        updatedAt: '2022-11-26T16:05:11.806Z'
                      title: NextJS 13
                      description: Best NextJS update ever
                      imageURL: >-
                        https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                      likes:
                        - User:
                            _id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            email:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            userName:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            displayName:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            isActive:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            role:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            createdAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            updatedAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          createdAt: '2022-11-26T16:05:11.806Z'
                        - User:
                            _id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            email:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            userName:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            displayName:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            isActive:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            role:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            createdAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            updatedAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          createdAt: '2022-11-26T16:05:11.806Z'
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    user:
                      _id: 6379fe8dad33ec4251700ded
                      email: user@charum.com
                      userName: charumuser
                      displayName: charum user
                      biodata: halo aku user
                      socialMedia: instagram @anon
                      profilePictureURL: >-
                        https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                      isActive: true
                      role: user
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    createdAt: '2022-11-26T16:05:11.806Z'
                    updatedAt: '2022-11-26T16:05:11.806Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: invalid thread id
                data: do nostru
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 401
                message: invalid token
                data: Lorem incididunt quis Ut irure
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 404
                message: failed to get follow thread
                data: aute proident Duis in et
  /thread/follow:
    get:
      tags:
        - Follow Thread
      summary: Get user's following thread by token
      description: Get following thread by user's token
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to follow thread
                data:
                  comment:
                    _id: 6379fe8dad33ec4251700ded
                    thread:
                      _id: 6379fe8dad33ec4251700ded
                      topic:
                        _id: 6379fe8dad33ec4251700ded
                        topic: topic name
                        description: topic description
                        imageURL: >-
                          https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                        createdAt: '2022-11-26T16:05:11.806Z'
                        updatedAt: '2022-11-26T16:05:11.806Z'
                      creator:
                        _id: 6379fe8dad33ec4251700ded
                        email: user@charum.com
                        userName: charumuser
                        displayName: charum user
                        isActive: true
                        role: user
                        createdAt: '2022-11-26T16:05:11.806Z'
                        updatedAt: '2022-11-26T16:05:11.806Z'
                      title: NextJS 13
                      description: Best NextJS update ever
                      imageURL: >-
                        https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                      likes:
                        - User:
                            _id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            email:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            userName:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            displayName:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            isActive:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            role:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            createdAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            updatedAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          createdAt: '2022-11-26T16:05:11.806Z'
                        - User:
                            _id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            email:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            userName:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            displayName:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            isActive:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            role:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            createdAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            updatedAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          createdAt: '2022-11-26T16:05:11.806Z'
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    user:
                      _id: 6379fe8dad33ec4251700ded
                      email: user@charum.com
                      userName: charumuser
                      displayName: charum user
                      biodata: halo aku user
                      socialMedia: instagram @anon
                      profilePictureURL: >-
                        https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                      isActive: true
                      role: user
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    createdAt: '2022-11-26T16:05:11.806Z'
                    updatedAt: '2022-11-26T16:05:11.806Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: invalid thread id
                data: do nostru
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 401
                message: invalid token
                data: Lorem incididunt quis Ut irure
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 404
                message: failed to get follow threads
                data: ullamco
  /thread/follow/{user-id}:
    get:
      tags:
        - Follow Thread
      summary: Get user's following thread by user id
      description: Get following thread by user id
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: user-id
          in: path
          schema:
            type: string
          required: true
          description: (Required) user's ID
          example: 6379fe8dad33ec4251700ded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to follow thread
                data:
                  followThreads:
                    _id: 6379fe8dad33ec4251700ded
                    user:
                      _id: 6379fe8dad33ec4251700ded
                      email: user@charum.com
                      userName: charumuser
                      displayName: charum user
                      biodata: halo aku user
                      socialMedia: instagram @anon
                      profilePictureURL: >-
                        https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                      isActive: true
                      role: user
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    thread:
                      _id: 6379fe8dad33ec4251700ded
                      topic:
                        _id: 6379fe8dad33ec4251700ded
                        topic: topic name
                        description: topic description
                        imageURL: >-
                          https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                        createdAt: '2022-11-26T16:05:11.806Z'
                        updatedAt: '2022-11-26T16:05:11.806Z'
                      creator:
                        _id: 6379fe8dad33ec4251700ded
                        email: user@charum.com
                        userName: charumuser
                        displayName: charum user
                        isActive: true
                        role: user
                        createdAt: '2022-11-26T16:05:11.806Z'
                        updatedAt: '2022-11-26T16:05:11.806Z'
                      title: NextJS 13
                      description: Best NextJS update ever
                      imageURL: >-
                        https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                      likes:
                        - User:
                            _id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            email:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            userName:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            displayName:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            isActive:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            role:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            createdAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            updatedAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          createdAt: '2022-11-26T16:05:11.806Z'
                        - User:
                            _id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            email:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            userName:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            displayName:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            isActive:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            role:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            createdAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            updatedAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          createdAt: '2022-11-26T16:05:11.806Z'
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    notification: 1
                    createdAt: '2022-11-26T16:05:11.806Z'
                    updatedAt: '2022-11-26T16:05:11.806Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: invalid thread id
                data: do nostru
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 401
                message: invalid token
                data: Lorem incididunt quis Ut irure
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 404
                message: failed to get follow threads
                data: ullamco
  /thread/like/id/{thread-id}:
    post:
      tags:
        - Like
      summary: Like thread
      description: Like thread by User
      requestBody:
        content: {}
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: thread-id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: 6379fe8dad33ec4251700ded
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 201
                message: success to like thread
                data: Ut aute aliquip
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: invalid thread id
                data: do nostru
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 404
                message: failed to get thread
                data: officia incididunt
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 409
                message: user already like this thread
                data: ips
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 500
                message: failed to like thread
                data: incididunt ex cupidatat
    delete:
      tags:
        - Like
      summary: Unlike Thread
      description: Unlike Thread by User
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: thread-id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: 6379fe8dad33ec4251700ded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to unlike thread
                data: ut est ipsum commodo ex
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: invalid thread id
                data: do nostru
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 404
                message: failed to get threaad
                data: dolore an
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 500
                message: failed to unlike thread
                data: et Lorem elit fugiat
  /thread/like:
    get:
      tags:
        - Like
      summary: get users' liked thread by token
      description: get users' liked thread by user's token
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to get liked thread
                data: commodo ea do
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 401
                message: invalid token
                data: Lorem incididunt quis Ut irure
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 500
                message: failed to get liked threads
                data: Lorem ea sit elit dolor
  /thread/like/{user-id}:
    get:
      tags:
        - Like
      summary: get users' liked thread by token
      description: get users' liked thread by user's token
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: user-id
          in: path
          schema:
            type: string
          required: true
          description: (Required) comment's ID
          example: 6379fe8dad33ec4251700ded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to get liked thread
                data: commodo ea do
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: invalid user id
                data: dolor
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 404
                message: failed to get user
                data: elit Ut
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 500
                message: failed to get liked threads
                data: Lorem ea sit elit dolor
  /thread/bookmark/{thread-id}:
    post:
      tags:
        - Bookmark
      summary: Add thread to bookmark
      description: Add thread to user's bookmark
      requestBody:
        content: {}
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: thread-id
          in: path
          schema:
            type: string
          required: true
          description: (Required) thread id
          example: 6379fe8dad33ec4251700ded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to get bookmarks
                data:
                  _id: 6379fe8dad33ec4251700ded
                  userID: 6379fe8dad33ec4251700ded
                  thread:
                    _id: 6379fe8dad33ec4251700ded
                    topic:
                      _id: 6379fe8dad33ec4251700ded
                      topic: topic name
                      description: topic description
                      imageURL: >-
                        https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    creator:
                      _id: 6379fe8dad33ec4251700ded
                      email: user@charum.com
                      userName: charumuser
                      displayName: charum user
                      isActive: true
                      role: user
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    title: NextJS 13
                    description: Best NextJS update ever
                    imageURL: >-
                      https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                    likes:
                      - UserID: 6379fe8dad33ec4251700ded
                        createdAt: '2022-11-26T16:05:11.806Z'
                      - UserID: 6379fe8dad33ec4251700ded
                        createdAt: '2022-11-26T16:05:11.806Z'
                    createdAt: '2022-11-26T16:05:11.806Z'
                    updatedAt: '2022-11-26T16:05:11.806Z'
                  createdAt: '2022-11-26T16:05:11.806Z'
                  updatedAt: '2022-11-26T16:05:11.806Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: invalid thread id
                data: do nostru
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 401
                message: invalid token
                data: Lorem incididunt quis Ut irure
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 404
                message: failed to get bookmark
                data: dolo
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 500
                message: failed to add thread to bookmark
                data: Ut velit minim laborum
    delete:
      tags:
        - Bookmark
      summary: Remove thread to bookmark
      description: Remove thread to user's bookmark
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: thread-id
          in: path
          schema:
            type: string
          required: true
          description: (Required) thread id
          example: 6379fe8dad33ec4251700ded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to delete bookmark
                data:
                  _id: 6379fe8dad33ec4251700ded
                  userID: 6379fe8dad33ec4251700ded
                  thread:
                    _id: 6379fe8dad33ec4251700ded
                    topic:
                      _id: 6379fe8dad33ec4251700ded
                      topic: topic name
                      description: topic description
                      imageURL: >-
                        https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    creator:
                      _id: 6379fe8dad33ec4251700ded
                      email: user@charum.com
                      userName: charumuser
                      displayName: charum user
                      isActive: true
                      role: user
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    title: NextJS 13
                    description: Best NextJS update ever
                    imageURL: >-
                      https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                    likes:
                      - UserID: 6379fe8dad33ec4251700ded
                        createdAt: '2022-11-26T16:05:11.806Z'
                      - UserID: 6379fe8dad33ec4251700ded
                        createdAt: '2022-11-26T16:05:11.806Z'
                    createdAt: '2022-11-26T16:05:11.806Z'
                    updatedAt: '2022-11-26T16:05:11.806Z'
                  createdAt: '2022-11-26T16:05:11.806Z'
                  updatedAt: '2022-11-26T16:05:11.806Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: invalid thread id
                data: do nostru
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 401
                message: invalid token
                data: Lorem incididunt quis Ut irure
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 404
                message: failed to get bookmark
                data: dolo
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 500
                message: failed to delete bookmark
                data: consectetur nulla fugiat
  /thread/bookmark:
    get:
      tags:
        - Bookmark
      summary: Get user's bookmark
      description: Get user's bookmark by token
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to craete bookmark
                data:
                  _id: 6379fe8dad33ec4251700ded
                  userID: 6379fe8dad33ec4251700ded
                  thread:
                    _id: 6379fe8dad33ec4251700ded
                    topic:
                      _id: 6379fe8dad33ec4251700ded
                      topic: topic name
                      description: topic description
                      imageURL: >-
                        https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    creator:
                      _id: 6379fe8dad33ec4251700ded
                      email: user@charum.com
                      userName: charumuser
                      displayName: charum user
                      isActive: true
                      role: user
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    title: NextJS 13
                    description: Best NextJS update ever
                    imageURL: >-
                      https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                    likes:
                      - UserID: 6379fe8dad33ec4251700ded
                        createdAt: '2022-11-26T16:05:11.806Z'
                      - UserID: 6379fe8dad33ec4251700ded
                        createdAt: '2022-11-26T16:05:11.806Z'
                    createdAt: '2022-11-26T16:05:11.806Z'
                    updatedAt: '2022-11-26T16:05:11.806Z'
                  createdAt: '2022-11-26T16:05:11.806Z'
                  updatedAt: '2022-11-26T16:05:11.806Z'
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 401
                message: invalid token
                data: Lorem incididunt quis Ut irure
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 500
                message: failed to get all bookmark
                data: Excepteur dolor Lorem ut et
  /thread:
    get:
      tags:
        - Thread
      summary: Get Thread by Token
      description: Get user's thread by token
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 201
                message: success to create thread
                data:
                  thread:
                    _id: 6379fe8dad33ec4251700ded
                    topic:
                      _id: 6379fe8dad33ec4251700ded
                      topic: topic name
                      description: topic description
                      imageURL: >-
                        https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    creator:
                      _id: 6379fe8dad33ec4251700ded
                      email: user@charum.com
                      userName: charumuser
                      displayName: charum user
                      isActive: true
                      role: user
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    title: NextJS 13
                    description: Best NextJS update ever
                    imageURL: >-
                      https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                    likes:
                      - User:
                          _id: 6379fe8dad33ec4251700ded
                          email: user@charum.com
                          userName: charumuser
                          displayName: charum user
                          isActive: true
                          role: user
                          createdAt: '2022-11-26T16:05:11.806Z'
                          updatedAt: '2022-11-26T16:05:11.806Z'
                        createdAt: '2022-11-26T16:05:11.806Z'
                      - User:
                          _id: 6379fe8dad33ec4251700ded
                          email: user@charum.com
                          userName: charumuser
                          displayName: charum user
                          isActive: true
                          role: user
                          createdAt: '2022-11-26T16:05:11.806Z'
                          updatedAt: '2022-11-26T16:05:11.806Z'
                        createdAt: '2022-11-26T16:05:11.806Z'
                    createdAt: '2022-11-26T16:05:11.806Z'
                    updatedAt: '2022-11-26T16:05:11.806Z'
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 401
                message: invalid token
                data: Lorem incididunt quis Ut irure
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 500
                message: failed to get threads
                data: labore magna Ut ullamco veniam
    post:
      tags:
        - Thread
      summary: Create Thread
      description: Create Thread by User and Admin
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                topicID:
                  type: string
                  example: 6379fe8dad33ec4251700ded
                title:
                  type: string
                  example: NextJS 13
                description:
                  type: string
                  example: Best NextJS update ever
                image:
                  type: string
                  format: binary
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 201
                message: success to create thread
                data:
                  thread:
                    _id: 6379fe8dad33ec4251700ded
                    topic:
                      _id: 6379fe8dad33ec4251700ded
                      topic: topic name
                      description: topic description
                      imageURL: >-
                        https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    creator:
                      _id: 6379fe8dad33ec4251700ded
                      email: user@charum.com
                      userName: charumuser
                      displayName: charum user
                      isActive: true
                      role: user
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    title: NextJS 13
                    description: Best NextJS update ever
                    imageURL: >-
                      https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                    likes:
                      - User:
                          _id: 6379fe8dad33ec4251700ded
                          email: user@charum.com
                          userName: charumuser
                          displayName: charum user
                          isActive: true
                          role: user
                          createdAt: '2022-11-26T16:05:11.806Z'
                          updatedAt: '2022-11-26T16:05:11.806Z'
                        createdAt: '2022-11-26T16:05:11.806Z'
                      - User:
                          _id: 6379fe8dad33ec4251700ded
                          email: user@charum.com
                          userName: charumuser
                          displayName: charum user
                          isActive: true
                          role: user
                          createdAt: '2022-11-26T16:05:11.806Z'
                          updatedAt: '2022-11-26T16:05:11.806Z'
                        createdAt: '2022-11-26T16:05:11.806Z'
                    createdAt: '2022-11-26T16:05:11.806Z'
                    updatedAt: '2022-11-26T16:05:11.806Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: validation failed
                data:
                  field: topic
                  message: This field is required
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 401
                message: invalid token
                data: Lorem incididunt quis Ut irure
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 500
                message: failed to create thread
                data: cupidatat eiusmod elit ullamco
  /thread/{page}:
    get:
      tags:
        - Thread
      summary: Get thread list
      description: Get thread list with filter, pagination, and sorting
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: limit
          in: query
          schema:
            type: integer
          description: thread limitation for per page
          example: '25'
        - name: sort
          in: query
          schema:
            type: string
          description: >-
            define parameter for sorting. available options = _id, title, likes,
            createdAt, or updatedAt
          example: createdAt
        - name: order
          in: query
          schema:
            type: string
          description: >-
            define the order of the selected sort. available options = asc or
            desc
          example: desc
        - name: topic-id
          in: query
          schema:
            type: string
          description: topic's id for filtering thread
          example: 6379fe8dad33ec4251700ded
        - name: title
          in: query
          schema:
            type: string
          description: thread's title for filtering thread
          example: NextJS 13
        - name: page
          in: path
          schema:
            type: integer
          required: true
          description: (Required) page displayed
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to get user by id
                data:
                  totalPage: 2
                  threads:
                    - _id: 6379fe8dad33ec4251700ded
                      topic:
                        _id: 6379fe8dad33ec4251700ded
                        topic: topic name
                        description: topic description
                        imageURL: >-
                          https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                        createdAt: '2022-11-26T16:05:11.806Z'
                        updatedAt: '2022-11-26T16:05:11.806Z'
                      creator:
                        _id: 6379fe8dad33ec4251700ded
                        email: user@charum.com
                        userName: charumuser
                        displayName: charum user
                        isActive: true
                        role: user
                        createdAt: '2022-11-26T16:05:11.806Z'
                        updatedAt: '2022-11-26T16:05:11.806Z'
                      title: NextJS 13
                      description: Best NextJS update ever
                      imageURL: >-
                        https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                      likes:
                        - User:
                            _id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            email:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            userName:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            displayName:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            isActive:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            role:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            createdAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            updatedAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          createdAt: '2022-11-26T16:05:11.806Z'
                        - User:
                            _id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            email:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            userName:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            displayName:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            isActive:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            role:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            createdAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            updatedAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          createdAt: '2022-11-26T16:05:11.806Z'
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    - _id: 6379fe8dad33ec4251700ded
                      topic:
                        _id: 6379fe8dad33ec4251700ded
                        topic: topic name
                        description: topic description
                        imageURL: >-
                          https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                        createdAt: '2022-11-26T16:05:11.806Z'
                        updatedAt: '2022-11-26T16:05:11.806Z'
                      creator:
                        _id: 6379fe8dad33ec4251700ded
                        email: user@charum.com
                        userName: charumuser
                        displayName: charum user
                        isActive: true
                        role: user
                        createdAt: '2022-11-26T16:05:11.806Z'
                        updatedAt: '2022-11-26T16:05:11.806Z'
                      title: NextJS 13
                      description: Best NextJS update ever
                      imageURL: >-
                        https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                      likes:
                        - User:
                            _id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            email:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            userName:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            displayName:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            isActive:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            role:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            createdAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            updatedAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          createdAt: '2022-11-26T16:05:11.806Z'
                        - User:
                            _id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            email:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            userName:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            displayName:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            isActive:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            role:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            createdAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            updatedAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          createdAt: '2022-11-26T16:05:11.806Z'
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                pagination:
                  size: 1
                  totalData: 1
                  totalPage: 1
                  currentPage: 1
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: page must be a number
                data: elit incididunt in
                pagination:
                  size: 0
                  totalData: 0
                  totalPage: 0
                  currentPage: 0
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 500
                message: failed to get threads
                data: dolor ut magna
                pagination:
                  size: 0
                  totalData: 0
                  totalPage: 0
                  currentPage: 0
  /admin/user/id/{user-id}:
    get:
      tags:
        - Admin
      summary: Get user profile
      description: Get user's profile data
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: user-id
          in: path
          schema:
            type: string
          required: true
          description: (Required) user ID
          example: 637dfc9bb09d0bdd7a2fe3de
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to get user by id
                data:
                  user:
                    _id: 6379fe8dad33ec4251700ded
                    email: user@charum.com
                    userName: charumuser
                    displayName: charum user
                    biodata: halo aku user
                    socialMedia: instagram @anon
                    profilePictureURL: >-
                      https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                    isActive: true
                    role: user
                    createdAt: '2022-11-26T16:05:11.806Z'
                    updatedAt: '2022-11-26T16:05:11.806Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: invalid id
                data: sit minim
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 404
                message: failed to get user
                data: elit Ut
    put:
      tags:
        - Admin
      summary: Update user profile
      description: Update user's profile data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@charum.com
                userName:
                  type: string
                  example: charum-user
                displayName:
                  type: string
                  example: charum user
                biodata:
                  type: string
                  example: halo aku user
                socialMedia:
                  type: string
                  example: instagram @anon
                profilePicture:
                  type: string
                  format: binary
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: user-id
          in: path
          schema:
            type: string
          required: true
          description: (Required) user ID
          example: 637dfc9bb09d0bdd7a2fe3de
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to update
                data:
                  user:
                    _id: 6379fe8dad33ec4251700ded
                    email: user@charum.com
                    userName: charumuser
                    displayName: charum user
                    biodata: halo aku user
                    socialMedia: instagram @anon
                    profilePictureURL: >-
                      https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                    isActive: true
                    role: user
                    createdAt: '2022-11-26T16:05:11.806Z'
                    updatedAt: '2022-11-26T16:05:11.806Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: invalid id
                data: sit minim
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 401
                message: unauthorized
                data: minim cillum laborum
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 404
                message: failed to get user
                data: elit Ut
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 409
                message: email is already used
                data: eu proident cupidatat ea
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 500
                message: failed to update user
                data: ullamco Lorem consequat esse
    delete:
      tags:
        - Admin
      summary: Delete user
      description: Delete user's data
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: user-id
          in: path
          schema:
            type: string
          required: true
          description: (Required) user ID
          example: 637dfc9bb09d0bdd7a2fe3de
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to delete user
                data:
                  user:
                    _id: 6379fe8dad33ec4251700ded
                    email: user@charum.com
                    userName: charumuser
                    displayName: charum user
                    biodata: halo aku user
                    socialMedia: instagram @anon
                    profilePictureURL: >-
                      https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                    isActive: true
                    role: user
                    createdAt: '2022-11-26T16:05:11.806Z'
                    updatedAt: '2022-11-26T16:05:11.806Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: invalid id
                data: sit minim
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 401
                message: unauthorized
                data: minim cillum laborum
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 404
                message: failed to get user
                data: elit Ut
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 500
                message: failed to delete user
                data: irure quis consectetur dolore
  /admin/user/{page}:
    get:
      tags:
        - Admin
      summary: Get user list
      description: Get user list with filter, pagination and sorting
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: limit
          in: query
          schema:
            type: integer
          description: user limitation for per page
          example: '25'
        - name: sort
          in: query
          schema:
            type: string
          description: >-
            define parameter for sorting. available options = _id, email,
            userName, displayName, createdAt, or updatedAt
          example: createdAt
        - name: order
          in: query
          schema:
            type: string
          description: >-
            define the order of the selected sort. available options = asc or
            desc
          example: desc
        - name: email
          in: query
          schema:
            type: string
          description: user's email for filtering
          example: user@charum.com
        - name: userName
          in: query
          schema:
            type: string
          description: user's username for filtering
          example: charumuser
        - name: displayName
          in: query
          schema:
            type: string
          description: user's display name for filtering
          example: charum user
        - name: page
          in: path
          schema:
            type: integer
          required: true
          description: (Required) page displayed
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to get users
                data:
                  totalPage: 2
                  users:
                    - _id: 6379fe8dad33ec4251700ded
                      email: user@charum.com
                      userName: charumuser
                      displayName: charum user
                      biodata: halo aku user
                      socialMedia: instagram @anon
                      profilePictureURL: >-
                        https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                      isActive: true
                      role: user
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    - _id: 6379fe8dad33ec4251700ded
                      email: user@charum.com
                      userName: charumuser
                      displayName: charum user
                      biodata: halo aku user
                      socialMedia: instagram @anon
                      profilePictureURL: >-
                        https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                      isActive: true
                      role: user
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                pagination:
                  size: 1
                  totalData: 1
                  totalPage: 1
                  currentPage: 1
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: page must be a number
                data: elit incididunt in
                pagination:
                  size: 0
                  totalData: 0
                  totalPage: 0
                  currentPage: 0
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 500
                message: failed to get users
                data: amet elit nisi ut laborum
                pagination:
                  size: 0
                  totalData: 0
                  totalPage: 0
                  currentPage: 0
  /admin/user/suspend/{user-id}:
    put:
      tags:
        - Admin
      summary: Suspend user
      description: Suspend user
      requestBody:
        content: {}
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: user-id
          in: path
          schema:
            type: string
          required: true
          description: (Required) user ID
          example: 637dfc9bb09d0bdd7a2fe3de
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to suspend user
                data:
                  user:
                    _id: 6379fe8dad33ec4251700ded
                    email: user@charum.com
                    userName: charumuser
                    displayName: charum user
                    biodata: halo aku user
                    socialMedia: instagram @anon
                    profilePictureURL: >-
                      https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                    isActive: true
                    role: user
                    createdAt: '2022-11-26T16:05:11.806Z'
                    updatedAt: '2022-11-26T16:05:11.806Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: invalid id
                data: sit minim
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 404
                message: failed to get user
                data: elit Ut
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 409
                message: user is already suspended
                data: eu esse laborum
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 500
                message: failed to suspend user
                data: in deserunt mollit est ex
  /admin/user/unsuspend/{user-id}:
    put:
      tags:
        - Admin
      summary: Unsuspend user
      description: Unsuspend user
      requestBody:
        content: {}
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: user-id
          in: path
          schema:
            type: string
          required: true
          description: (Required) user ID
          example: 637dfc9bb09d0bdd7a2fe3de
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to unsuspend user
                data:
                  user:
                    _id: 6379fe8dad33ec4251700ded
                    email: user@charum.com
                    userName: charumuser
                    displayName: charum user
                    biodata: halo aku user
                    socialMedia: instagram @anon
                    profilePictureURL: >-
                      https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                    isActive: true
                    role: user
                    createdAt: '2022-11-26T16:05:11.806Z'
                    updatedAt: '2022-11-26T16:05:11.806Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: invalid id
                data: sit minim
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 404
                message: failed to get user
                data: elit Ut
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 409
                message: user is not suspended
                data: amet nisi
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 500
                message: failed to suspend user
                data: in deserunt mollit est ex
  /admin/topic/id/{topic-id}:
    get:
      tags:
        - Admin
      summary: Get topic data
      description: Get topic data by id
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: topic-id
          in: path
          schema:
            type: string
          required: true
          description: (Required) topic ID
          example: 637dfc9bb09d0bdd7a2fe3de
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to get topic by id
                data:
                  topic:
                    _id: 6379fe8dad33ec4251700ded
                    topic: topic name
                    description: topic description
                    createdAt: '2022-11-26T16:05:11.806Z'
                    updatedAt: '2022-11-26T16:05:11.806Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: invalid id
                data: sit minim
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 404
                message: failed to get topic
                data: elit ex proident
    put:
      tags:
        - Admin
      summary: Update topic data
      description: Update topic data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                topic:
                  type: string
                  example: new Topic
                description:
                  type: string
                  example: new Description
                image:
                  type: string
                  format: binary
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: topic-id
          in: path
          schema:
            type: string
          required: true
          description: (Required) topic ID
          example: 637dfc9bb09d0bdd7a2fe3de
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success update topic
                data:
                  topic:
                    _id: 6379fe8dad33ec4251700ded
                    topic: topic name
                    description: topic description
                    createdAt: '2022-11-26T16:05:11.806Z'
                    updatedAt: '2022-11-26T16:05:11.806Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: invalid id
                data: sit minim
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 409
                message: topic already exist
                data: labore cupidatat consectetur
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 500
                message: failed to update topic
                data: id proident ullamco ad
    delete:
      tags:
        - Admin
      summary: Delete topic
      description: Delete topic
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: topic-id
          in: path
          schema:
            type: string
          required: true
          description: (Required) topic ID
          example: 637dfc9bb09d0bdd7a2fe3de
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to delete topic
                data:
                  topic:
                    _id: 6379fe8dad33ec4251700ded
                    topic: topic name
                    description: topic description
                    createdAt: '2022-11-26T16:05:11.806Z'
                    updatedAt: '2022-11-26T16:05:11.806Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: invalid id
                data: sit minim
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 401
                message: unauthorized
                data: minim cillum laborum
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 500
                message: failed to delete topic
                data: voluptate reprehenderit est in dolor
  /admin/topic:
    post:
      tags:
        - Admin
      summary: Create Topic
      description: Create Topic
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                topic: topic name
                description: topic description
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to create topic
                data:
                  topic:
                    _id: 6379fe8dad33ec4251700ded
                    topic: topic name
                    description: topic description
                    createdAt: '2022-11-26T16:05:11.806Z'
                    updatedAt: '2022-11-26T16:05:11.806Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: validation failed
                data:
                  field: topic
                  message: This field is required
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 401
                message: unauthorized
                data: minim cillum laborum
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 409
                message: topic already exist
                data: labore cupidatat consectetur
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 500
                message: failed to create topic
                data: consectetur aliqua Ut
  /admin/topic/{page}:
    get:
      tags:
        - Admin
      summary: Get all topic
      description: Get topic list with filter, pagination, and sorting
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: limit
          in: query
          schema:
            type: integer
          description: topic limitation for per page
          example: '25'
        - name: sort
          in: query
          schema:
            type: string
          description: >-
            define parameter for sorting. available options = id, topic,
            createdAt, or updatedAt
          example: createdAt
        - name: order
          in: query
          schema:
            type: string
          description: >-
            define the order of the selected sort. available options = asc or
            desc
          example: desc
        - name: topic
          in: query
          schema:
            type: string
          description: topic for filtering topic's data
          example: topic name
        - name: page
          in: path
          schema:
            type: integer
          required: true
          description: (Required) page displayed
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to get topics
                data:
                  topics:
                    - _id: 6379fe8dad33ec4251700ded
                      topic: topic name
                      description: topic description
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    - _id: 6379fe8dad33ec4251700ded
                      topic: topic name
                      description: topic description
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                pagination:
                  size: 1
                  totalData: 1
                  totalPage: 1
                  currentPage: 1
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: page must be a number
                data: elit incididunt in
                pagination:
                  size: 0
                  totalData: 0
                  totalPage: 0
                  currentPage: 0
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 500
                message: failed to get topics
                data: pariatur
                pagination:
                  size: 0
                  totalData: 0
                  totalPage: 0
                  currentPage: 0
  /admin/thread/id/{thread-id}:
    get:
      tags:
        - Admin
      summary: Get thread by id
      description: get thread's data by id
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: thread-id
          in: path
          schema:
            type: string
          required: true
          description: (Required) thread id
          example: 6379fe8dad33ec4251700ded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to get thread
                data:
                  thread:
                    _id: 6379fe8dad33ec4251700ded
                    topic:
                      _id: 6379fe8dad33ec4251700ded
                      topic: topic name
                      description: topic description
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    creator:
                      _id: 6379fe8dad33ec4251700ded
                      email: user@charum.com
                      userName: charumuser
                      displayName: charum user
                      biodata: halo aku user
                      socialMedia: instagram @anon
                      profilePictureURL: >-
                        https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                      isActive: true
                      role: user
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    title: NextJS 13
                    description: Best NextJS update ever
                    likes:
                      - UserID: 6379fe8dad33ec4251700ded
                        createdAt: '2022-11-26T16:05:11.806Z'
                      - UserID: 6379fe8dad33ec4251700ded
                        createdAt: '2022-11-26T16:05:11.806Z'
                    createdAt: '2022-11-26T16:05:11.806Z'
                    updatedAt: '2022-11-26T16:05:11.806Z'
                  comments:
                    - _id: 6379fe8dad33ec4251700ded
                      thread:
                        _id: 6379fe8dad33ec4251700ded
                        topicId: 6379fe8dad33ec4251700ded
                        creatorId: 6379fe8dad33ec4251700ded
                        title: NextJS 13
                        description: Best NextJS update ever
                        imageURL: >-
                          https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                        likes:
                          - UserID:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            createdAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          - UserID:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            createdAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                        createdAt: '2022-11-26T16:05:11.806Z'
                        updatedAt: '2022-11-26T16:05:11.806Z'
                      user:
                        _id: 6379fe8dad33ec4251700ded
                        email: user@charum.com
                        userName: charumuser
                        displayName: charum user
                        isActive: true
                        role: user
                        createdAt: '2022-11-26T16:05:11.806Z'
                        updatedAt: '2022-11-26T16:05:11.806Z'
                      comment: Very Excited to user NextJS 13
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    - _id: 6379fe8dad33ec4251700ded
                      thread:
                        _id: 6379fe8dad33ec4251700ded
                        topicId: 6379fe8dad33ec4251700ded
                        creatorId: 6379fe8dad33ec4251700ded
                        title: NextJS 13
                        description: Best NextJS update ever
                        imageURL: >-
                          https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                        likes:
                          - UserID:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            createdAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          - UserID:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            createdAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                        createdAt: '2022-11-26T16:05:11.806Z'
                        updatedAt: '2022-11-26T16:05:11.806Z'
                      user:
                        _id: 6379fe8dad33ec4251700ded
                        email: user@charum.com
                        userName: charumuser
                        displayName: charum user
                        isActive: true
                        role: user
                        createdAt: '2022-11-26T16:05:11.806Z'
                        updatedAt: '2022-11-26T16:05:11.806Z'
                      comment: Very Excited to user NextJS 13
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: invalid thread id
                data: do nostru
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 401
                message: unauthorized
                data: minim cillum laborum
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 404
                message: failed to get thread
                data: officia incididunt
    put:
      tags:
        - Admin
      summary: Update thread by id
      description: update user own thread or update thread by admin
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                topicID:
                  type: string
                  example: 6379fe8dad33ec4251700ded
                title:
                  type: string
                  example: NextJS 13
                description:
                  type: string
                  example: Best NextJS update ever
                image:
                  type: string
                  format: binary
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: thread-id
          in: path
          schema:
            type: string
          required: true
          description: (Required) thread id
          example: 6379fe8dad33ec4251700ded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to update thread
                data:
                  thread:
                    _id: 6379fe8dad33ec4251700ded
                    topic:
                      _id: 6379fe8dad33ec4251700ded
                      topic: topic name
                      description: topic description
                      imageURL: >-
                        https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    creator:
                      _id: 6379fe8dad33ec4251700ded
                      email: user@charum.com
                      userName: charumuser
                      displayName: charum user
                      isActive: true
                      role: user
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    title: NextJS 13
                    description: Best NextJS update ever
                    imageURL: >-
                      https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                    likes:
                      - User:
                          _id: 6379fe8dad33ec4251700ded
                          email: user@charum.com
                          userName: charumuser
                          displayName: charum user
                          isActive: true
                          role: user
                          createdAt: '2022-11-26T16:05:11.806Z'
                          updatedAt: '2022-11-26T16:05:11.806Z'
                        createdAt: '2022-11-26T16:05:11.806Z'
                      - User:
                          _id: 6379fe8dad33ec4251700ded
                          email: user@charum.com
                          userName: charumuser
                          displayName: charum user
                          isActive: true
                          role: user
                          createdAt: '2022-11-26T16:05:11.806Z'
                          updatedAt: '2022-11-26T16:05:11.806Z'
                        createdAt: '2022-11-26T16:05:11.806Z'
                    createdAt: '2022-11-26T16:05:11.806Z'
                    updatedAt: '2022-11-26T16:05:11.806Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: invalid thread id
                data: do nostru
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 401
                message: unauthorized
                data: minim cillum laborum
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 404
                message: failed to get topic
                data: elit ex proident
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 500
                message: failed to update thread
                data: ullamco in mo
    delete:
      tags:
        - Admin
      summary: Delete thread
      description: creator and admin can delete thread
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: thread-id
          in: path
          schema:
            type: string
          required: true
          description: (Required) thread id
          example: 6379fe8dad33ec4251700ded
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to delete thread
                data:
                  thread:
                    _id: 6379fe8dad33ec4251700ded
                    topic:
                      _id: 6379fe8dad33ec4251700ded
                      topic: topic name
                      description: topic description
                      imageURL: >-
                        https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    creator:
                      _id: 6379fe8dad33ec4251700ded
                      email: user@charum.com
                      userName: charumuser
                      displayName: charum user
                      isActive: true
                      role: user
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    title: NextJS 13
                    description: Best NextJS update ever
                    imageURL: >-
                      https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                    likes:
                      - User:
                          _id: 6379fe8dad33ec4251700ded
                          email: user@charum.com
                          userName: charumuser
                          displayName: charum user
                          isActive: true
                          role: user
                          createdAt: '2022-11-26T16:05:11.806Z'
                          updatedAt: '2022-11-26T16:05:11.806Z'
                        createdAt: '2022-11-26T16:05:11.806Z'
                      - User:
                          _id: 6379fe8dad33ec4251700ded
                          email: user@charum.com
                          userName: charumuser
                          displayName: charum user
                          isActive: true
                          role: user
                          createdAt: '2022-11-26T16:05:11.806Z'
                          updatedAt: '2022-11-26T16:05:11.806Z'
                        createdAt: '2022-11-26T16:05:11.806Z'
                    createdAt: '2022-11-26T16:05:11.806Z'
                    updatedAt: '2022-11-26T16:05:11.806Z'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: invalid thread id
                data: do nostru
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 401
                message: unauthorized
                data: minim cillum laborum
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 404
                message: failed to get thread
                data: officia incididunt
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 500
                message: failed to delete thread
                data: dolore nisi
  /admin/thread/{page}:
    get:
      tags:
        - Admin
      summary: Get thread list
      description: Get thread list with filter, pagination, and sorting
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: limit
          in: query
          schema:
            type: integer
          description: user limitation for per page
          example: '25'
        - name: sort
          in: query
          schema:
            type: string
          description: >-
            define parameter for sorting. available options = id, title,
            createdAt, or updatedAt
          example: createdAt
        - name: order
          in: query
          schema:
            type: string
          description: >-
            define the order of the selected sort. available options = asc or
            desc
          example: desc
        - name: topic-id
          in: query
          schema:
            type: string
          description: topic's id for filtering thread
          example: 6379fe8dad33ec4251700ded
        - name: title
          in: query
          schema:
            type: string
          description: thread's title for filtering
          example: NextJS 13
        - name: page
          in: path
          schema:
            type: integer
          required: true
          description: (Required) page displayed
          example: '1'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to get user by id
                data:
                  totalPage: 2
                  threads:
                    - _id: 6379fe8dad33ec4251700ded
                      topic:
                        _id: 6379fe8dad33ec4251700ded
                        topic: topic name
                        description: topic description
                        imageURL: >-
                          https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                        createdAt: '2022-11-26T16:05:11.806Z'
                        updatedAt: '2022-11-26T16:05:11.806Z'
                      creator:
                        _id: 6379fe8dad33ec4251700ded
                        email: user@charum.com
                        userName: charumuser
                        displayName: charum user
                        isActive: true
                        role: user
                        createdAt: '2022-11-26T16:05:11.806Z'
                        updatedAt: '2022-11-26T16:05:11.806Z'
                      title: NextJS 13
                      description: Best NextJS update ever
                      imageURL: >-
                        https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                      likes:
                        - User:
                            _id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            email:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            userName:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            displayName:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            isActive:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            role:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            createdAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            updatedAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          createdAt: '2022-11-26T16:05:11.806Z'
                        - User:
                            _id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            email:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            userName:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            displayName:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            isActive:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            role:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            createdAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            updatedAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          createdAt: '2022-11-26T16:05:11.806Z'
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                    - _id: 6379fe8dad33ec4251700ded
                      topic:
                        _id: 6379fe8dad33ec4251700ded
                        topic: topic name
                        description: topic description
                        imageURL: >-
                          https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                        createdAt: '2022-11-26T16:05:11.806Z'
                        updatedAt: '2022-11-26T16:05:11.806Z'
                      creator:
                        _id: 6379fe8dad33ec4251700ded
                        email: user@charum.com
                        userName: charumuser
                        displayName: charum user
                        isActive: true
                        role: user
                        createdAt: '2022-11-26T16:05:11.806Z'
                        updatedAt: '2022-11-26T16:05:11.806Z'
                      title: NextJS 13
                      description: Best NextJS update ever
                      imageURL: >-
                        https://res.cloudinary.com/ddensbwye/image/upload/v1670660428/charum/users/Screenshot%202022-11-04%20130108.png.png
                      likes:
                        - User:
                            _id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            email:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            userName:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            displayName:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            isActive:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            role:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            createdAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            updatedAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          createdAt: '2022-11-26T16:05:11.806Z'
                        - User:
                            _id:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            email:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            userName:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            displayName:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            isActive:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            role:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            createdAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                            updatedAt:
                              value: >-
                                <Error: Too many levels of nesting to fake this
                                schema>
                          createdAt: '2022-11-26T16:05:11.806Z'
                      createdAt: '2022-11-26T16:05:11.806Z'
                      updatedAt: '2022-11-26T16:05:11.806Z'
                pagination:
                  size: 1
                  totalData: 1
                  totalPage: 1
                  currentPage: 1
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: page must be a number
                data: elit incididunt in
                pagination:
                  size: 0
                  totalData: 0
                  totalPage: 0
                  currentPage: 0
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 401
                message: unauthorized
                data: minim cillum laborum
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: 500
                message: failed to get threads
                data: dolor ut magna
                pagination:
                  size: 0
                  totalData: 0
                  totalPage: 0
                  currentPage: 0
  /admin/report:
    get:
      tags:
        - Admin
      summary: Get All Report
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=UTF-8
            Vary:
              schema:
                type: string
                example: Origin
            Date:
              schema:
                type: string
                example: Wed, 21 Dec 2022 08:01:51 GMT
            Content-Length:
              schema:
                type: integer
                example: '125'
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success get report
                data:
                  total reported threads: 3
                  total reported users: 5
                  total reports: 8
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=UTF-8
            Vary:
              schema:
                type: string
                example: Origin
            Date:
              schema:
                type: string
                example: Wed, 21 Dec 2022 08:02:10 GMT
            Content-Length:
              schema:
                type: integer
                example: '53'
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: invalid token
                data: null
  /admin/user/report:
    get:
      tags:
        - Admin
      summary: Get All Report for Users
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=UTF-8
            Vary:
              schema:
                type: string
                example: Origin
            Date:
              schema:
                type: string
                example: Wed, 21 Dec 2022 08:03:42 GMT
            Content-Length:
              schema:
                type: integer
                example: '80'
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success get report
                data:
                  total reported users: 5
  /admin/thread/report:
    get:
      tags:
        - Admin
      summary: Get All Report for Thread
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=UTF-8
            Vary:
              schema:
                type: string
                example: Origin
            Date:
              schema:
                type: string
                example: Wed, 21 Dec 2022 08:04:11 GMT
            Content-Length:
              schema:
                type: integer
                example: '82'
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success get report
                data:
                  total reported threads: 3
  /admin/thread/report/{thread-id}:
    get:
      tags:
        - Admin
      summary: Get All Report for Thread by id
      parameters:
        - name: thread-id
          in: path
          schema:
            type: string
          required: true
          example: 639c6e31fd1cd9847a8fc4d21
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=UTF-8
            Vary:
              schema:
                type: string
                example: Origin
            Date:
              schema:
                type: string
                example: Wed, 21 Dec 2022 08:06:13 GMT
            Content-Length:
              schema:
                type: integer
                example: '73'
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success get report
                data:
                  total reports: 1
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=UTF-8
            Vary:
              schema:
                type: string
                example: Origin
            Date:
              schema:
                type: string
                example: Wed, 21 Dec 2022 08:06:25 GMT
            Content-Length:
              schema:
                type: integer
                example: '50'
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: invalid id
                data: null
  /admin/user/report/{user-id}:
    get:
      tags:
        - Admin
      summary: Get All Report for User by id
      parameters:
        - name: user-id
          in: path
          schema:
            type: string
          required: true
          example: 63934f785b1979ce0e7a15a0
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=UTF-8
            Vary:
              schema:
                type: string
                example: Origin
            Date:
              schema:
                type: string
                example: Wed, 21 Dec 2022 08:10:16 GMT
            Content-Length:
              schema:
                type: integer
                example: '73'
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success get report
                data:
                  total reports: 1
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=UTF-8
            Vary:
              schema:
                type: string
                example: Origin
            Date:
              schema:
                type: string
                example: Wed, 21 Dec 2022 08:06:25 GMT
            Content-Length:
              schema:
                type: integer
                example: '50'
          content:
            application/json:
              schema:
                type: object
              example:
                status: 400
                message: invalid id
                data: null
  /admin/statistics/user:
    get:
      tags:
        - Admin
      summary: Statistics User
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=UTF-8
            Vary:
              schema:
                type: string
                example: Origin
            Date:
              schema:
                type: string
                example: Wed, 21 Dec 2022 08:28:39 GMT
            Content-Length:
              schema:
                type: integer
                example: '78'
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to get all users
                data:
                  total users: 24
  /admin/statistics/thread:
    get:
      tags:
        - Admin
      summary: Statistics Thread
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=UTF-8
            Vary:
              schema:
                type: string
                example: Origin
            Date:
              schema:
                type: string
                example: Wed, 21 Dec 2022 08:29:21 GMT
            Content-Length:
              schema:
                type: integer
                example: '82'
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success to get all threads
                data:
                  total threads: 15
  /admin/statistics/report:
    get:
      tags:
        - Admin
      summary: Statistics Report
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=UTF-8
            Vary:
              schema:
                type: string
                example: Origin
            Date:
              schema:
                type: string
                example: Wed, 21 Dec 2022 08:29:49 GMT
            Content-Length:
              schema:
                type: integer
                example: '77'
          content:
            application/json:
              schema:
                type: object
              example:
                status: 200
                message: success get all report
                data:
                  total reports: 8