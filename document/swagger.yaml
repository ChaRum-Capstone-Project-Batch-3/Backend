openapi: 3.0.0
info:
  title: Charum
  description: |-
    This is a Charum Back End
  version: 1.0.0
servers:
  - url: https://charum-api.nyakit.in/api/v1
tags:
  - name: User
    description: Operations about user
  - name: Topic
    description: Operations about topic
  - name: Thread
    description: Operation about thread
  - name: Admin
    description: Operations for admin
    
paths:
  /user/register:
    post:
      tags:
        - User
      summary: Registration for user
      description: This registration is used by user
      operationId: Register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@charum.com
                userName:
                  type: string
                  example: charum-user
                displayName:
                  type: string
                  example: charum user
                biodata:
                  type: string
                  example: halo aku user
                socialMedia:
                  type: string
                  example: instagram @anon
                password:
                  type: string
                  example: secretpassword
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: success to register
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI2Mzc5ZmU4ZGFkMzNlYzQyNTE3MDBkZWQiLCJyb2xlIjoidXNlciIsImlzcyI6ImNoYXJ1bSIsImV4cCI6MTY2ODk0Nzg3NiwibmJmIjoxNjY4OTQ0Mjc2LCJpYXQiOjE2Njg5NDQyNzZ9._hk2Y2pt6tADTN0aHTukPNd2O_wRdHsgn3Vo4jIX_zc
                      user:
                        $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: validation failed
                  data:
                    type: object
                    properties:
                      field:
                        type: string
                        example: password
                      message:
                        type: string
                        example: This field must be at least 8 characters
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 409
                  message:
                    type: string
                    example: email is already registered
                  data:
                    type: string
                    example: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: failed to register user
                  data:
                    type: string
                    example: null
  /user/login:
    post:
      tags:
        - User
      summary: Logs user into the system
      description: Get token for user and user's data with email or username on key
      operationId: Login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                  example: user@charum.com
                password:
                  type: string
                  example: secretpassword
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to login
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI2Mzc5ZmU4ZGFkMzNlYzQyNTE3MDBkZWQiLCJyb2xlIjoidXNlciIsImlzcyI6ImNoYXJ1bSIsImV4cCI6MTY2ODk0Nzg3NiwibmJmIjoxNjY4OTQ0Mjc2LCJpYXQiOjE2Njg5NDQyNzZ9._hk2Y2pt6tADTN0aHTukPNd2O_wRdHsgn3Vo4jIX_zc
                      user:
                        $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: validation failed
                  data:
                    type: object
                    properties:
                      field:
                        type: string
                        example: password
                      message:
                        type: string
                        example: This field must be at least 8 characters
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: email is not registered
                  data:
                    type: string
                    example: null
  /user/profile:
    get:
      tags:
        - User
      summary: Get user profile
      description: Get user's profile data
      operationId: GetProfile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to login
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI2Mzc5ZmU4ZGFkMzNlYzQyNTE3MDBkZWQiLCJyb2xlIjoidXNlciIsImlzcyI6ImNoYXJ1bSIsImV4cCI6MTY2ODk0Nzg3NiwibmJmIjoxNjY4OTQ0Mjc2LCJpYXQiOjE2Njg5NDQyNzZ9._hk2Y2pt6tADTN0aHTukPNd2O_wRdHsgn3Vo4jIX_zc
                      user:
                        $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: validation failed
                  data:
                    type: object
                    properties:
                      field:
                        type: string
                        example: password
                      message:
                        type: string
                        example: This field must be at least 8 characters
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: email is not registered
                  data:
                    type: string
                    example: null
    put:
      tags:
        - User
      summary: Update user profile
      description: Update user's profile data
      operationId: UserUpdate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@charum.com
                userName:
                  type: string
                  example: charum-user
                displayName:
                  type: string
                  example: charum user
                biodata:
                  type: string
                  example: halo aku user
                socialMedia:
                  type: string
                  example: instagram @anon
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to update
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: invalid id
                  data:
                    type: string
                    example: null
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: unauthorized
                  data:
                    type: string
                    example: null
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: failed to get user
                  data:
                    type: string
                    example: null
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 409
                  message:
                    type: string
                    example: email is already used
                  data:
                    type: string
                    example: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: failed to update user
                  data:
                    type: string
                    example: null
  /topic/{page}:
    get:
      tags:
        - Topic
      summary: Get all topic
      description: Get topic list with filter, pagination, and sorting
      operationId: GetTopicWithPagination
      parameters:
        - in: path
          name: page
          description: page displayed
          required: true
          schema:
            type: integer
            example: 1
        - in: query
          name: limit
          description: topic limitation for per page
          required: false
          schema:
            type: integer
            example: 25
            default: 25
        - in: query
          name: sort
          description: define parameter for sorting. available options = id, topic, createdAt, or updatedAt
          required: false
          schema:
            type: string
            example: createdAt
            default: createdAt
        - in: query
          name: order
          description: define the order of the selected sort. available options = asc or desc
          required: false
          schema:
            type: string
            example: desc
            default: desc
        - in: query
          name: topic
          description: topic for filtering topic's data
          schema:
            type: string
            example: topic name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to get topics
                  data:
                    type: object
                    properties:
                      topics:
                        type: array
                        items:
                          $ref: '#/components/schemas/Topic'
                  pagination:
                    type: object
                    properties:
                      size:
                        type: integer
                        example: 1
                      totalData:
                        type: integer
                        example: 1
                      totalPage:
                        type: integer
                        example: 1
                      currentPage:
                        type: integer
                        example: 1
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: page must be a number
                  data:
                    type: string
                    example: null
                  pagination:
                    type: object
                    properties:
                      size:
                        type: integer
                        example: 0
                      totalData:
                        type: integer
                        example: 0
                      totalPage:
                        type: integer
                        example: 0
                      currentPage:
                        type: integer
                        example: 0
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: failed to get topics
                  data:
                    type: string
                    example: null
                  pagination:
                    type: object
                    properties:
                      size:
                        type: integer
                        example: 0
                      totalData:
                        type: integer
                        example: 0
                      totalPage:
                        type: integer
                        example: 0
                      currentPage:
                        type: integer
                        example: 0
  /topic/{topic-id}:
    get:
      tags:
        - Topic
      summary: Get topic data
      description: Get topic data by id
      operationId: GetTopicByTopicID
      parameters:
        - in: path
          name: topic-id
          description: topic ID
          required: true
          schema:
            type: string
            example: 637dfc9bb09d0bdd7a2fe3de
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to get topic by id
                  data:
                    type: object
                    properties:
                      topic:
                        $ref: '#/components/schemas/Topic'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: invalid id
                  data:
                    type: string
                    example: null
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: failed to get topic
                  data:
                    type: string
                    example: null
  /thread:
    get:
      tags:
        - Thread
      summary: Get Thread by Token
      description: Get user's thread by token
      operationId: GetManyThreadByToken
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: success to create thread
                  data:
                    type: object
                    properties:
                      thread:
                       $ref: '#/components/schemas/Thread'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: invalid token
                  data:
                    type: string
                    example: null
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: failed to get threads
                  data:
                    type: string
                    example: null
    post:
      tags:
        - Thread
      summary: Create Thread
      description: Create Thread by User and Admin
      operationId: CreateThread
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                topicID:
                  type: string
                  example: 6379fe8dad33ec4251700ded
                title:
                  type: string
                  example: NextJS 13
                description:
                  type: string
                  example: Best NextJS update ever
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: success to create thread
                  data:
                    type: object
                    properties:
                      thread:
                       $ref: '#/components/schemas/Thread'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: validation failed
                  data:
                    type: object
                    properties:
                      field:
                        type: string
                        example: topic
                      message:
                        type: string
                        example: This field is required
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: invalid token
                  data:
                    type: string
                    example: null
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: failed to create thread
                  data:
                    type: string
                    example: null
  /thread/{page}:
    get:
      tags:
        - Thread
      summary: Get thread list
      description: Get thread list with filter, pagination, and sorting
      operationId: GetThreadsWithPagnation
      parameters:
        - in: path
          name: page
          description: page displayed
          required: true
          schema:
            type: integer
            example: 1
        - in: query
          name: limit
          description: thread limitation for per page
          required: false
          schema:
            type: integer
            example: 25
            default: 25
        - in: query
          name: sort
          description: define parameter for sorting. available options = _id, title, likes, createdAt, or updatedAt
          required: false
          schema:
            type: string
            example: createdAt
            default: createdAt
        - in: query
          name: order
          description: define the order of the selected sort. available options = asc or desc
          required: false
          schema:
            type: string
            example: desc
            default: desc
        - in: query
          name: topic-id
          description: topic's id for filtering thread
          required: false
          schema:
            type: string
            example: 6379fe8dad33ec4251700ded
        - in: query
          name: title
          description: thread's title for filtering thread
          schema:
            type: string
            example: NextJS 13
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to get user by id
                  data:
                    type: object
                    properties:
                      totalPage:
                        type: integer
                        example: 2
                      threads:
                        type: array
                        items:
                          $ref: '#/components/schemas/Thread'
                  pagination:
                    type: object
                    properties:
                      size:
                        type: integer
                        example: 1
                      totalData:
                        type: integer
                        example: 1
                      totalPage:
                        type: integer
                        example: 1
                      currentPage:
                        type: integer
                        example: 1
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: page must be a number
                  data:
                    type: string
                    example: null
                  pagination:
                    type: object
                    properties:
                      size:
                        type: integer
                        example: 0
                      totalData:
                        type: integer
                        example: 0
                      totalPage:
                        type: integer
                        example: 0
                      currentPage:
                        type: integer
                        example: 0
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: failed to get threads
                  data:
                    type: string
                    example: null
                  pagination:
                    type: object
                    properties:
                      size:
                        type: integer
                        example: 0
                      totalData:
                        type: integer
                        example: 0
                      totalPage:
                        type: integer
                        example: 0
                      currentPage:
                        type: integer
                        example: 0
  /thread/id/{thread-id}:
    get:
      tags:
        - Thread
      summary: Get thread by id
      description: get thread's data by id
      operationId: GetThreadByID
      parameters:
        - in: path
          name: thread-id
          description: thread id
          required: true
          schema:
            type: string
            example: 6379fe8dad33ec4251700ded
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                   type: integer
                   example: 200
                  message:
                    type: string
                    example: success to get thread
                  data:
                   type: object
                   properties:
                    thread:
                      type: object
                      properties:
                        _id:
                          type: string
                          example: 6379fe8dad33ec4251700ded
                        topic:
                          $ref: '#/components/schemas/Topic'
                        creator:
                          $ref: '#/components/schemas/User'
                        title:
                          type: string
                          example: NextJS 13
                        description:
                          type: string
                          example: Best NextJS update ever
                        likes:
                          type: array
                          items:
                            type: object
                            properties:
                              userID:
                                type: string
                                example: 6379fe8dad33ec4251700ded
                              createdAt:
                                type: string
                                example: 2022-11-26T23:05:11.806+07:00
                        createdAt:
                          type: string
                          example: 2022-11-26T23:05:11.806+07:00
                        updatedAt:
                          type: string
                          example: 2022-11-26T23:05:11.806+07:00
                    comments:
                      type: array
                      items:
                        $ref: '#/components/schemas/Comment'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                   type: integer
                   example: 400
                  message:
                    type: string
                    example: invalid thread id
                  data:
                   type: string
                   example: null
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                   type: integer
                   example: 404
                  message:
                    type: string
                    example: failed to get thread
                  data:
                   type: string
                   example: null
    put:
      tags:
        - Thread
      summary: Update thread by id
      description: update user own thread or update thread by admin
      operationId: updateThread
      parameters:
        - in: path
          name: thread-id
          description: thread id
          required: true
          schema:
            type: string
            example: 6379fe8dad33ec4251700ded
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                topic:
                  type: string
                  example: Technology
                title:
                  type: string
                  example: NextJS 13
                description:
                  type: string
                  example: Best NextJS update ever
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to update thread
                  data:
                    type: object
                    properties:
                      thread:
                       $ref: '#/components/schemas/Thread'
        '400':
          description: bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: invalid thread id
                  data:
                    type: string
                    example: null
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: invalid token
                  data:
                    type: string
                    example: null
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 403
                  message:
                    type: string
                    example: user are not the thread creator
                  data:
                    type: string
                    example: null              
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: failed to get topic
                  data:
                    type: string
                    example: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: failed to update thread
                  data:
                    type: string
                    example: null
    delete:
      tags:
        - Thread
      summary: Delete thread
      description: creator and admin can delete thread
      operationId: DeleteThread
      parameters:
        - in: path
          name: thread-id
          description: thread id
          required: true
          schema:
            type: string
            example: 6379fe8dad33ec4251700ded
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to delete thread
                  data:
                    type: object
                    properties:
                      thread:
                       $ref: '#/components/schemas/Thread'
        '400':
          description: bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: invalid thread id
                  data:
                    type: string
                    example: null
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: invalid token
                  data:
                    type: string
                    example: null
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 403
                  message:
                    type: string
                    example: user are not the thread creator
                  data:
                    type: string
                    example: null
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: failed to get thread
                  data:
                    type: string
                    example: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: failed to delete thread
                  data:
                    type: string
                    example: null
  /admin/user/{page}:
    get:
      tags:
        - Admin
      summary: Get user list
      description: Get user list with filter, pagination and sorting
      operationId: GetUsersWithPagination
      parameters:
        - in: path
          name: page
          description: page displayed
          required: true
          schema:
            type: integer
            example: 1
        - in: query
          name: limit
          description: user limitation for per page
          required: false
          schema:
            type: integer
            example: 25
            default: 25
        - in: query
          name: sort
          description: define parameter for sorting. available options = _id, email, userName, displayName, createdAt, or updatedAt
          required: false
          schema:
            type: string
            example: createdAt
            default: createdAt
        - in: query
          name: order
          description: define the order of the selected sort. available options = asc or desc
          required: false
          schema:
            type: string
            example: desc
            default: desc
        - in: query
          name: email
          description: user's email for filtering
          required: false
          schema:
            type: string
            example: user@charum.com
        - in: query
          name: userName
          description: user's username for filtering
          schema:
            type: string
            example: charumuser
        - in: query
          name: displayName
          description: user's display name for filtering
          schema:
            type: string
            example: charum user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to get users
                  data:
                    type: object
                    properties:
                      totalPage:
                        type: integer
                        example: 2
                      users:
                        type: array
                        items:
                          $ref: '#/components/schemas/User'
                  pagination:
                    type: object
                    properties:
                      size:
                        type: integer
                        example: 1
                      totalData:
                        type: integer
                        example: 1
                      totalPage:
                        type: integer
                        example: 1
                      currentPage:
                        type: integer
                        example: 1
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: page must be a number
                  data:
                    type: string
                    example: null
                  pagination:
                    type: object
                    properties:
                      size:
                        type: integer
                        example: 0
                      totalData:
                        type: integer
                        example: 0
                      totalPage:
                        type: integer
                        example: 0
                      currentPage:
                        type: integer
                        example: 0
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: failed to get users
                  data:
                    type: string
                    example: null
                  pagination:
                    type: object
                    properties:
                      size:
                        type: integer
                        example: 0
                      totalData:
                        type: integer
                        example: 0
                      totalPage:
                        type: integer
                        example: 0
                      currentPage:
                        type: integer
                        example: 0
  /admin/user/id/{user-id}:
    get:
      tags:
        - Admin
      summary: Get user profile
      description: Get user's profile data
      operationId: GetUserByID
      parameters:
        - in: path
          name: user-id
          description: user ID
          required: true
          schema:
            type: string
            example: 637dfc9bb09d0bdd7a2fe3de
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to get user by id
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: invalid id
                  data:
                    type: string
                    example: null
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: failed to get user
                  data:
                    type: string
                    example: null
    put:
      tags:
        - Admin
      summary: Update user profile
      description: Update user's profile data
      operationId: AdminUpdate
      parameters:
        - in: path
          name: user-id
          description: user ID
          required: true
          schema:
            type: string
            example: 637dfc9bb09d0bdd7a2fe3de
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@charum.com
                userName:
                  type: string
                  example: charum-user
                displayName:
                  type: string
                  example: charum user
                biodata:
                  type: string
                  example: halo aku user
                socialMedia:
                  type: string
                  example: instagram @anon
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to update
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: invalid id
                  data:
                    type: string
                    example: null
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: unauthorized
                  data:
                    type: string
                    example: null
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: failed to get user
                  data:
                    type: string
                    example: null
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 409
                  message:
                    type: string
                    example: email is already used
                  data:
                    type: string
                    example: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: failed to update user
                  data:
                    type: string
                    example: null
    delete:
      tags:
        - Admin
      summary: Delete user
      description: Delete user's data
      operationId: Delete
      parameters:
        - in: path
          name: user-id
          description: user ID
          required: true
          schema:
            type: string
            example: 637dfc9bb09d0bdd7a2fe3de
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to delete user
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: invalid id
                  data:
                    type: string
                    example: null
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: unauthorized
                  data:
                    type: string
                    example: null
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: failed to get user
                  data:
                    type: string
                    example: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: failed to delete user
                  data:
                    type: string
                    example: null
  /admin/user/suspend/{user-id}:
    put:
      tags:
        - Admin
      summary: Suspend user
      description: Suspend user
      operationId: Suspend
      parameters:
        - in: path
          name: user-id
          description: user ID
          required: true
          schema:
            type: string
            example: 637dfc9bb09d0bdd7a2fe3de
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to suspend user
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: invalid id
                  data:
                    type: string
                    example: null
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: failed to get user
                  data:
                    type: string
                    example: null
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 409
                  message:
                    type: string
                    example: user is already suspended
                  data:
                    type: string
                    example: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: failed to suspend user
                  data:
                    type: string
                    example: null
  /admin/user/unsuspend/{user-id}:
    put:
      tags:
        - Admin
      summary: Unsuspend user
      description: Unsuspend user
      operationId: Unsuspend
      parameters:
        - in: path
          name: user-id
          description: user ID
          required: true
          schema:
            type: string
            example: 637dfc9bb09d0bdd7a2fe3de
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to unsuspend user
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: invalid id
                  data:
                    type: string
                    example: null
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: failed to get user
                  data:
                    type: string
                    example: null
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 409
                  message:
                    type: string
                    example: user is not suspended
                  data:
                    type: string
                    example: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: failed to suspend user
                  data:
                    type: string
                    example: null
  /admin/topic:
    post:
      tags:
        - Admin
      summary: Create Topic
      description: Create Topic
      operationId: Create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                topic:
                  type: string
                  example: topic name
                description:
                  type: string
                  example: topic description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to create topic
                  data:
                    type: object
                    properties:
                      topic:
                        $ref: '#/components/schemas/Topic'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: validation failed
                  data:
                    type: object
                    properties:
                      field:
                        type: string
                        example: topic
                      message:
                        type: string
                        example: This field is required
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: unauthorized
                  data:
                    type: string
                    example: null
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 409
                  message:
                    type: string
                    example: topic already exist
                  data:
                    type: string
                    example: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: failed to create topic
                  data:
                    type: string
                    example: null
  /admin/topic/{page}:
    get:
      tags:
        - Admin
      summary: Get all topic
      description: Get topic list with filter, pagination, and sorting
      operationId: AdminGetTopicWithPagination
      parameters:
        - in: path
          name: page
          description: page displayed
          required: true
          schema:
            type: integer
            example: 1
        - in: query
          name: limit
          description: topic limitation for per page
          required: false
          schema:
            type: integer
            example: 25
            default: 25
        - in: query
          name: sort
          description: define parameter for sorting. available options = id, topic, createdAt, or updatedAt
          required: false
          schema:
            type: string
            example: createdAt
            default: createdAt
        - in: query
          name: order
          description: define the order of the selected sort. available options = asc or desc
          required: false
          schema:
            type: string
            example: desc
            default: desc
        - in: query
          name: topic
          description: topic for filtering topic's data
          schema:
            type: string
            example: topic name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to get topics
                  data:
                    type: object
                    properties:
                      topics:
                        type: array
                        items:
                          $ref: '#/components/schemas/Topic'
                  pagination:
                    type: object
                    properties:
                      size:
                        type: integer
                        example: 1
                      totalData:
                        type: integer
                        example: 1
                      totalPage:
                        type: integer
                        example: 1
                      currentPage:
                        type: integer
                        example: 1
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: page must be a number
                  data:
                    type: string
                    example: null
                  pagination:
                    type: object
                    properties:
                      size:
                        type: integer
                        example: 0
                      totalData:
                        type: integer
                        example: 0
                      totalPage:
                        type: integer
                        example: 0
                      currentPage:
                        type: integer
                        example: 0
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: failed to get topics
                  data:
                    type: string
                    example: null
                  pagination:
                    type: object
                    properties:
                      size:
                        type: integer
                        example: 0
                      totalData:
                        type: integer
                        example: 0
                      totalPage:
                        type: integer
                        example: 0
                      currentPage:
                        type: integer
                        example: 0
  /admin/topic/id/{topic-id}:
    get:
      tags:
        - Admin
      summary: Get topic data
      description: Get topic data by id
      operationId: GetTopicByID
      parameters:
        - in: path
          name: topic-id
          description: topic ID
          required: true
          schema:
            type: string
            example: 637dfc9bb09d0bdd7a2fe3de
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to get topic by id
                  data:
                    type: object
                    properties:
                      topic:
                        $ref: '#/components/schemas/Topic'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: invalid id
                  data:
                    type: string
                    example: null
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: failed to get topic
                  data:
                    type: string
                    example: null
    put:
      tags:
        - Admin
      summary: Update topic data
      description: Update topic data
      operationId: UpdateTopic
      parameters:
        - in: path
          name: topic-id
          description: topic ID
          required: true
          schema:
            type: string
            example: 637dfc9bb09d0bdd7a2fe3de
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                topic:
                  type: string
                  example: new Topic
                description:
                  type: string
                  example: new Description
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success update topic
                  data:
                    type: object
                    properties:
                      topic:
                        $ref: '#/components/schemas/Topic'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: invalid id
                  data:
                    type: string
                    example: null
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 409
                  message:
                    type: string
                    example: topic already exist
                  data:
                    type: string
                    example: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: failed to update topic
                  data:
                    type: string
                    example: null
    delete:
      tags:
        - Admin
      summary: Delete topic
      description: Delete topic
      operationId: DeleteTopic
      parameters:
        - in: path
          name: topic-id
          description: topic ID
          required: true
          schema:
            type: string
            example: 637dfc9bb09d0bdd7a2fe3de
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to delete topic
                  data:
                    type: object
                    properties:
                      topic:
                        $ref: '#/components/schemas/Topic'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: invalid id
                  data:
                    type: string
                    example: null
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: unauthorized
                  data:
                    type: string
                    example: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: failed to delete topic
                  data:
                    type: string
                    example: null
  /thread/comment/{thread-id}:
    post:
      tags:
        - Thread
      summary: Send commment to thread
      description: Send commment by thread id
      operationId: CreateComment
      parameters:
        - in: path
          name: thread-id
          description: thread's ID
          required: true
          schema:
            type: string
            example: 6379fe8dad33ec4251700ded
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to create comment
                  data:
                    type: object
                    properties:
                      comment:
                        type: object
                        properties:
                          _id:
                            type: string
                            example: 6379fe8dad33ec4251700ded
                          threadID:
                            type: string
                            example: 6379fe8dad33ec4251700ded
                          user:
                            $ref: '#/components/schemas/User'
                          comment: 
                            type: string
                            example: Best NextJS update ever
                          createdAt:
                            type: string
                            example: 2022-11-26T23:05:11.806+07:00
                          updatedAt:
                            type: string
                            example: 2022-11-26T23:05:11.806+07:00
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: invalid thread id
                  data:
                    type: string
                    example: null
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: invalid token
                  data:
                    type: string
                    example: null
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: failed to get thread
                  data:
                    type: string
                    example: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: failed to create comment
                  data:
                    type: string
                    example: null
  /thread/comment/{comment-id}:
    put:
      tags:
        - Thread
      summary: Update commment
      description: Update commment by comment id
      operationId: UpdateComment
      parameters:
        - in: path
          name: comment-id
          description: comment's ID
          required: true
          schema:
            type: string
            example: 6379fe8dad33ec4251700ded
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to delete comment
                  data:
                    type: object
                    properties:
                      comment:
                        type: object
                        properties:
                          _id:
                            type: string
                            example: 6379fe8dad33ec4251700ded
                          threadID:
                            type: string
                            example: 6379fe8dad33ec4251700ded
                          user:
                            $ref: '#/components/schemas/User'
                          comment: 
                            type: string
                            example: Best NextJS update ever
                          createdAt:
                            type: string
                            example: 2022-11-26T23:05:11.806+07:00
                          updatedAt:
                            type: string
                            example: 2022-11-26T23:05:11.806+07:00
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: invalid comment id
                  data:
                    type: string
                    example: null
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: invalid token
                  data:
                    type: string
                    example: null
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: failed to get comment
                  data:
                    type: string
                    example: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: failed to delete comment
                  data:
                    type: string
                    example: null
    delete:
      tags:
        - Thread
      summary: Delete commment from thread
      description: Delete commment by comment id
      operationId: DeleteComment
      parameters:
        - in: path
          name: comment-id
          description: comment's ID
          required: true
          schema:
            type: string
            example: 6379fe8dad33ec4251700ded
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to create comment
                  data:
                    type: object
                    properties:
                      comment:
                        type: object
                        properties:
                          _id:
                            type: string
                            example: 6379fe8dad33ec4251700ded
                          threadID:
                            type: string
                            example: 6379fe8dad33ec4251700ded
                          user:
                            $ref: '#/components/schemas/User'
                          comment: 
                            type: string
                            example: Best NextJS update ever
                          createdAt:
                            type: string
                            example: 2022-11-26T23:05:11.806+07:00
                          updatedAt:
                            type: string
                            example: 2022-11-26T23:05:11.806+07:00
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: invalid comment id
                  data:
                    type: string
                    example: null
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: invalid token
                  data:
                    type: string
                    example: null
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: failed to get comment
                  data:
                    type: string
                    example: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: failed to delete comment
                  data:
                    type: string
                    example: null
  /thread/follow:
    get:
      tags:
        - Thread
      summary: Get user's following thread by token
      description: Get following thread by user's token
      operationId: GetFollowedThreadByToken
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to follow thread
                  data:
                    type: object
                    properties:
                      comment:
                        type: object
                        properties:
                          _id:
                            type: string
                            example: 6379fe8dad33ec4251700ded
                          thread:
                            $ref: '#/components/schemas/Thread'
                          user:
                            $ref: '#/components/schemas/User'
                          createdAt:
                            type: string
                            example: 2022-11-26T23:05:11.806+07:00
                          updatedAt:
                            type: string
                            example: 2022-11-26T23:05:11.806+07:00
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: invalid thread id
                  data:
                    type: string
                    example: null
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: invalid token
                  data:
                    type: string
                    example: null
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: failed to get follow threads
                  data:
                    type: string
                    example: null
  /thread/follow/{user-id}:
    get:
      tags:
        - Thread
      summary: Get user's following thread by user id
      description: Get following thread by user id
      operationId: GetFollowedThreadByUserID
      parameters:
        - in: path
          name: user-id
          description: user's ID
          required: true
          schema:
            type: string
            example: 6379fe8dad33ec4251700ded
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to follow thread
                  data:
                    type: object
                    properties:
                      followThreads:
                        type: object
                        properties:
                          _id:
                            type: string
                            example: 6379fe8dad33ec4251700ded
                          user:
                            $ref: '#/components/schemas/User'
                          thread:
                            $ref: '#/components/schemas/Thread'
                          notification:
                            type: integer
                            example: 1
                          createdAt:
                            type: string
                            example: 2022-11-26T23:05:11.806+07:00
                          updatedAt:
                            type: string
                            example: 2022-11-26T23:05:11.806+07:00
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: invalid thread id
                  data:
                    type: string
                    example: null
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: invalid token
                  data:
                    type: string
                    example: null
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: failed to get follow threads
                  data:
                    type: string
                    example: null
  /thread/follow/{thread-id}:
    post:
      tags:
        - Thread
      summary: Follow thread
      description: Create follow thread by thread id
      operationId: CreateFollowThread
      parameters:
        - in: path
          name: thread-id
          description: thread's ID
          required: true
          schema:
            type: string
            example: 6379fe8dad33ec4251700ded
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: success to follow thread
                  data:
                    type: object
                    properties:
                      comment:
                        type: object
                        properties:
                          _id:
                            type: string
                            example: 6379fe8dad33ec4251700ded
                          thread:
                            $ref: '#/components/schemas/Thread'
                          user:
                            $ref: '#/components/schemas/User'
                          createdAt:
                            type: string
                            example: 2022-11-26T23:05:11.806+07:00
                          updatedAt:
                            type: string
                            example: 2022-11-26T23:05:11.806+07:00
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: invalid thread id
                  data:
                    type: string
                    example: null
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: invalid token
                  data:
                    type: string
                    example: null
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: failed to get thread
                  data:
                    type: string
                    example: null
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 409
                  message:
                    type: string
                    example: user already follow this thread
                  data:
                    type: string
                    example: null
    delete:
      tags:
        - Thread
      summary: Unfollow thread
      description: Delete follow thread by thread id
      operationId: DeleteFollowThread
      parameters:
        - in: path
          name: thread-id
          description: thread's ID
          required: true
          schema:
            type: string
            example: 6379fe8dad33ec4251700ded
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to unfollow thread
                  data:
                    type: object
                    properties:
                      comment:
                        type: object
                        properties:
                          _id:
                            type: string
                            example: 6379fe8dad33ec4251700ded
                          thread:
                            $ref: '#/components/schemas/Thread'
                          user:
                            $ref: '#/components/schemas/User'
                          createdAt:
                            type: string
                            example: 2022-11-26T23:05:11.806+07:00
                          updatedAt:
                            type: string
                            example: 2022-11-26T23:05:11.806+07:00
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: invalid thread id
                  data:
                    type: string
                    example: null
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: invalid token
                  data:
                    type: string
                    example: null
                  
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: failed to get follow thread
                  data:
                    type: string
                    example: null
  /admin/thread/{page}:
    get:
      tags:
        - Admin
      summary: Get thread list
      description: Get thread list with filter, pagination, and sorting
      operationId: GetThreadsWithPagnationByAdmin
      parameters:
        - in: path
          name: page
          description: page displayed
          required: true
          schema:
            type: integer
            example: 1
        - in: query
          name: limit
          description: user limitation for per page
          required: false
          schema:
            type: integer
            example: 25
            default: 25
        - in: query
          name: sort
          description: define parameter for sorting. available options = id, title, createdAt, or updatedAt
          required: false
          schema:
            type: string
            example: createdAt
            default: createdAt
        - in: query
          name: order
          description: define the order of the selected sort. available options = asc or desc
          required: false
          schema:
            type: string
            example: desc
            default: desc
        - in: query
          name: topic-id
          description: topic's id for filtering thread
          schema: 
            type: string
            example: 6379fe8dad33ec4251700ded
        - in: query
          name: title
          description: thread's title for filtering
          schema: 
            type: string
            example: NextJS 13
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to get user by id
                  data:
                    type: object
                    properties:
                      totalPage:
                        type: integer
                        example: 2
                      threads:
                        type: array
                        items:
                          $ref: '#/components/schemas/Thread'
                  pagination:
                    type: object
                    properties:
                      size:
                        type: integer
                        example: 1
                      totalData:
                        type: integer
                        example: 1
                      totalPage:
                        type: integer
                        example: 1
                      currentPage:
                        type: integer
                        example: 1
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: page must be a number
                  data:
                    type: string
                    example: null
                  pagination:
                    type: object
                    properties:
                      size:
                        type: integer
                        example: 0
                      totalData:
                        type: integer
                        example: 0
                      totalPage:
                        type: integer
                        example: 0
                      currentPage:
                        type: integer
                        example: 0
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: unauthorized
                  data:
                    type: string
                    example: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: failed to get threads
                  data:
                    type: string
                    example: null
                  pagination:
                    type: object
                    properties:
                      size:
                        type: integer
                        example: 0
                      totalData:
                        type: integer
                        example: 0
                      totalPage:
                        type: integer
                        example: 0
                      currentPage:
                        type: integer
                        example: 0
  /admin/thread/id/{thread-id}:
    get:
      tags:
        - Admin
      summary: Get thread by id
      description: get thread's data by id
      operationId: GetThreadByIDByAdmin
      parameters:
        - in: path
          name: thread-id
          description: thread id
          required: true
          schema:
            type: string
            example: 6379fe8dad33ec4251700ded
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                   type: integer
                   example: 200
                  message:
                    type: string
                    example: success to get thread
                  data:
                   type: object
                   properties:
                    thread:
                      type: object
                      properties:
                        _id:
                          type: string
                          example: 6379fe8dad33ec4251700ded
                        topic:
                          $ref: '#/components/schemas/Topic'
                        creator:
                          $ref: '#/components/schemas/User'
                        title:
                          type: string
                          example: NextJS 13
                        description:
                          type: string
                          example: Best NextJS update ever
                        likes:
                          type: array
                          items:
                            type: object
                            properties:
                              userID:
                                type: string
                                example: 6379fe8dad33ec4251700ded
                              createdAt:
                                type: string
                                example: 2022-11-26T23:05:11.806+07:00
                        createdAt:
                          type: string
                          example: 2022-11-26T23:05:11.806+07:00
                        updatedAt:
                          type: string
                          example: 2022-11-26T23:05:11.806+07:00
                    comments:
                      type: array
                      items:
                        $ref: '#/components/schemas/Comment'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                   type: integer
                   example: 400
                  message:
                    type: string
                    example: invalid thread id
                  data:
                   type: string
                   example: null
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: unauthorized
                  data:
                    type: string
                    example: null
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                   type: integer
                   example: 404
                  message:
                    type: string
                    example: failed to get thread
                  data:
                   type: string
                   example: null
    put:
      tags:
        - Admin
      summary: Update thread by id
      description: update user own thread or update thread by admin
      operationId: updateThreadByAdmin
      parameters:
        - in: path
          name: thread-id
          description: thread id
          required: true
          schema:
            type: string
            example: 6379fe8dad33ec4251700ded
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                topic:
                  type: string
                  example: Technology
                title:
                  type: string
                  example: NextJS 13
                description:
                  type: string
                  example: Best NextJS update ever
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to update thread
                  data:
                    type: object
                    properties:
                      thread:
                       $ref: '#/components/schemas/Thread'
        '400':
          description: bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: invalid thread id
                  data:
                    type: string
                    example: null
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: unauthorized
                  data:
                    type: string
                    example: null
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: failed to get topic
                  data:
                    type: string
                    example: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: failed to update thread
                  data:
                    type: string
                    example: null
    delete:
      tags:
        - Admin
      summary: Delete thread
      description: creator and admin can delete thread
      operationId: DeleteThreadByAdmin
      parameters:
        - in: path
          name: thread-id
          description: thread id
          required: true
          schema:
            type: string
            example: 6379fe8dad33ec4251700ded
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: success to delete thread
                  data:
                    type: object
                    properties:
                      thread:
                       $ref: '#/components/schemas/Thread'
        '400':
          description: bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: invalid thread id
                  data:
                    type: string
                    example: null
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: unauthorized
                  data:
                    type: string
                    example: null   
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: failed to get thread
                  data:
                    type: string
                    example: null
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: failed to delete thread
                  data:
                    type: string
                    example: null

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          example: 6379fe8dad33ec4251700ded
        email:
          type: string
          example: user@charum.com
        userName:
          type: string
          example: charumuser
        displayName:
          type: string
          example: charum user
        password:
          type: string
          example: secretpassword
        isActive:
          type: boolean
          example: true
        role:
          type: string
          example: user
        createdAt:
          type: string
          example: 2022-11-26T23:05:11.806+07:00
        updatedAt:
          type: string
          example: 2022-11-26T23:05:11.806+07:00
    Topic:
      type: object
      properties:
        _id:
          type: string
          example: 6379fe8dad33ec4251700ded
        topic:
          type: string
          example: topic name
        description:
          type: string
          example: topic description
        createdAt:
          type: string
          example: 2022-11-26T23:05:11.806+07:00
        updatedAt:
          type: string
          example: 2022-11-26T23:05:11.806+07:00
    Thread:
      type: object
      properties:
        _id:
          type: string
          example: 6379fe8dad33ec4251700ded
        topicId:
          type: string
          example: 6379fe8dad33ec4251700ded
        creatorId:
          type: string
          example: 6379fe8dad33ec4251700ded
        title:
          type: string
          example: NextJS 13
        description:
          type: string
          example: Best NextJS update ever
        likes:
         type: array
         items:
          type: object
          properties:
            userID:
              type: string
              example: 6379fe8dad33ec4251700ded
            createdAt:
              type: string
              example: 2022-11-26T23:05:11.806+07:00
        createdAt:
          type: string
          example: 2022-11-26T23:05:11.806+07:00
        updatedAt:
          type: string
          example: 2022-11-26T23:05:11.806+07:00
    Comment:
      type: object
      properties:
        _id:
          type: string
          example: 6379fe8dad33ec4251700ded
        threadID:
          type: string
          example: 6379fe8dad33ec4251700ded
        userID:
          type: string
          example: 6379fe8dad33ec4251700ded
        comment:
          type: string
          example: Very Excited to user NextJS 13
        createdAt:
          type: string
          example: 2022-11-26T23:05:11.806+07:00
        updatedAt:
          type: string
          example: 2022-11-26T23:05:11.806+07:00
    FollowThread:
      type: object
      properties:
        _id:
          type: string
          example: 6379fe8dad33ec4251700ded
        threadID:
          type: string
          example: 6379fe8dad33ec4251700ded
        userID:
          type: string
          example: 6379fe8dad33ec4251700ded
        notification:
          type: integer
          example: 1
        createdAt:
          type: string
          example: 2022-11-26T23:05:11.806+07:00
        updatedAt:
          type: string
          example: 2022-11-26T23:05:11.806+07:00
security:
  - bearerAuth: []